{"ast":null,"code":"import { persistStore, persistReducer } from \"redux-persist\";\nimport { createStore, combineReducers } from \"redux\";\nimport { CookieStorage } from \"redux-persist-cookie-storage\";\nimport Cookies from \"js-cookie\";\nimport { createWrapper } from \"next-redux-wrapper\";\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\nimport * as reducers from \"./reducers\";\nconst in24Hours = new Date(new Date().getTime() + 24 * 60 * 60 * 1000);\nconst persistConfig = {\n  key: \"root\",\n  storage: new CookieStorage(Cookies, {\n    setCookieOptions: {\n      // sameSite: \"strict\",\n      expires: in24Hours\n    }\n  }),\n  whitelist: [\"user\", \"accessToken\", \"profile\"]\n};\nconst allReducers = combineReducers(reducers);\nconst persistedReducer = persistReducer(persistConfig, allReducers);\nexport const store = createStore(persistedReducer, devToolsEnhancer());\n\nconst makeStore = () => store;\n\nexport const wrapper = createWrapper(makeStore, {\n  debug: true\n});\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["C:/project/e-survey-dashboard/store/store.js"],"names":["persistStore","persistReducer","createStore","combineReducers","CookieStorage","Cookies","createWrapper","devToolsEnhancer","reducers","in24Hours","Date","getTime","persistConfig","key","storage","setCookieOptions","expires","whitelist","allReducers","persistedReducer","store","makeStore","wrapper","debug","persistor"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AAEA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;AAEA,MAAMC,SAAS,GAAG,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,GAAWC,OAAX,KAAuB,KAAK,EAAL,GAAU,EAAV,GAAe,IAA/C,CAAlB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBC,EAAAA,OAAO,EAAE,IAAIV,aAAJ,CAAkBC,OAAlB,EAA2B;AAClCU,IAAAA,gBAAgB,EAAE;AAChB;AACAC,MAAAA,OAAO,EAAEP;AAFO;AADgB,GAA3B,CAFW;AAQpBQ,EAAAA,SAAS,EAAE,CAAC,MAAD,EAAS,aAAT,EAAwB,SAAxB;AARS,CAAtB;AAWA,MAAMC,WAAW,GAAGf,eAAe,CAACK,QAAD,CAAnC;AACA,MAAMW,gBAAgB,GAAGlB,cAAc,CAACW,aAAD,EAAgBM,WAAhB,CAAvC;AAEA,OAAO,MAAME,KAAK,GAAGlB,WAAW,CAACiB,gBAAD,EAAmBZ,gBAAgB,EAAnC,CAAzB;;AACP,MAAMc,SAAS,GAAG,MAAMD,KAAxB;;AACA,OAAO,MAAME,OAAO,GAAGhB,aAAa,CAACe,SAAD,EAAY;AAAEE,EAAAA,KAAK,EAAE;AAAT,CAAZ,CAA7B;AACP,OAAO,MAAMC,SAAS,GAAGxB,YAAY,CAACoB,KAAD,CAA9B","sourcesContent":["import { persistStore, persistReducer } from \"redux-persist\";\r\nimport { createStore, combineReducers } from \"redux\";\r\nimport { CookieStorage } from \"redux-persist-cookie-storage\";\r\nimport Cookies from \"js-cookie\";\r\nimport { createWrapper } from \"next-redux-wrapper\";\r\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\r\n\r\nimport * as reducers from \"./reducers\";\r\n\r\nconst in24Hours = new Date(new Date().getTime() + 24 * 60 * 60 * 1000);\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage: new CookieStorage(Cookies, {\r\n    setCookieOptions: {\r\n      // sameSite: \"strict\",\r\n      expires: in24Hours,\r\n    },\r\n  }),\r\n  whitelist: [\"user\", \"accessToken\", \"profile\"],\r\n};\r\n\r\nconst allReducers = combineReducers(reducers);\r\nconst persistedReducer = persistReducer(persistConfig, allReducers);\r\n\r\nexport const store = createStore(persistedReducer, devToolsEnhancer());\r\nconst makeStore = () => store;\r\nexport const wrapper = createWrapper(makeStore, { debug: true });\r\nexport const persistor = persistStore(store);\r\n"]},"metadata":{},"sourceType":"module"}