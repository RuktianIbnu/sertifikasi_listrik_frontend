{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Edit, Delete, Visibility, CheckBox, RadioButtonChecked, Publish, Subject, Add, Clear } from \"@material-ui/icons\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { axiosGeneral } from \"../../helpers/global\";\nimport { useToasts } from \"react-toast-notifications\";\nimport ReactLoading from \"react-loading\";\nimport { setLoading } from \"../../store/actionCreator\";\nconst Wrapper = styled.div`\n  padding: 23px 54px 0px 54px;\n`;\nconst MenuTitle = styled.h1`\n  font-size: 48px;\n  font-weight: bold;\n  color: #000;\n`;\nconst ButtonAdd = styled.div`\n  font-size: 14px;\n  background: #4361ee;\n  color: #fff;\n  padding: 10px 23px;\n  border-radius: 10px;\n  font-weight: 700;\n  cursor: pointer;\n`;\nconst Card = styled.div`\n  background: #fff;\n  border-radius: 10px;\n  box-shadow: 2px 2px 7px rgba(0, 0, 0, 0.25);\n  padding: 30px 46px 30px 46px;\n`;\nexport default function Pertanyaan() {\n  const accessToken = useSelector(state => state.accessToken);\n  const {\n    0: listPertanyaan,\n    1: setListPertanyaan\n  } = useState([]);\n  const {\n    0: showList,\n    1: setShowList\n  } = useState(true);\n  const {\n    0: showAdd,\n    1: setShowAdd\n  } = useState(false);\n  const {\n    0: showDetail,\n    1: setShowDetail\n  } = useState(false);\n  const {\n    0: selectedID,\n    1: setSelectedID\n  } = useState();\n  const {\n    addToast\n  } = useToasts();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    getPertanyaan();\n  }, [showAdd, showDetail]);\n\n  const getPertanyaan = async () => {\n    try {\n      const headers = {\n        Authorization: `Bearer ${accessToken}`\n      };\n      setListPertanyaan([]);\n      dispatch(setLoading(true));\n      const response = await axiosGeneral.get(\"/resources/poin-kuesioner\", {\n        headers\n      });\n      const {\n        status,\n        data\n      } = response;\n\n      if (status === 200) {\n        setListPertanyaan(data.data);\n        dispatch(setLoading(false));\n      }\n    } catch (error) {\n      addToast(\"get_pertanyaan \" + error.response.data.message, {\n        appearance: \"error\"\n      });\n      dispatch(setLoading(false));\n    }\n  };\n\n  const deletePertanyaan = async ID => {\n    try {\n      const headers = {\n        Authorization: `Bearer ${accessToken}`\n      };\n      const response = await axiosGeneral.delete(`/resources/poin-kuesioner/${ID}`, {\n        headers\n      });\n      const {\n        status\n      } = response;\n\n      if (status === 200) {\n        getPertanyaan();\n        addToast(\"Berhasil hapus\", {\n          appearance: \"success\"\n        });\n      }\n    } catch (error) {\n      addToast(error.response.data.message, {\n        appearance: \"error\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(Wrapper, {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: \"flex flex-row justify-between items-center pb-24\",\n      children: [/*#__PURE__*/_jsx(MenuTitle, {\n        children: \"Master Pertanyaan\"\n      }), /*#__PURE__*/_jsx(ButtonAdd, {\n        hidden: showAdd,\n        onClick: () => {\n          setShowList(false);\n          setShowAdd(true);\n        },\n        className: \"cursor-pointer\",\n        children: \"Tambah Pertanyaan baru\"\n      }), /*#__PURE__*/_jsx(ButtonAdd, {\n        hidden: showList,\n        onClick: () => {\n          setShowList(true);\n          setShowAdd(false);\n        },\n        className: \"cursor-pointer\",\n        children: \"Kembali\"\n      })]\n    }), /*#__PURE__*/_jsxs(Card, {\n      hidden: showAdd,\n      children: [showList && /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"flex flex-row border-b-2 mb-4\",\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            className: \"text-sm font-bold w-10\",\n            children: \"#\"\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: \"text-sm font-bold w-4/5\",\n            children: \"Pertanyaan\"\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: \"text-sm font-bold w-32 text-center\",\n            children: \"Bobot\"\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: \"text-sm font-bold text-center\",\n            children: \"Action\"\n          })]\n        }), listPertanyaan.map((value, index) => /*#__PURE__*/_jsxs(\"div\", {\n          className: \"flex flex-row border-b py-2 items-center\",\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            className: \"text-sm w-10\",\n            children: index + 1\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: \"text-sm w-4/5\",\n            children: value.pertanyaan\n          }), /*#__PURE__*/_jsxs(\"p\", {\n            className: \"text-sm w-32 text-center\",\n            children: [value.bobot, \"%\"]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"flex flex-row w-32\",\n            children: [/*#__PURE__*/_jsx(Tooltip, {\n              onClick: () => deletePertanyaan(value.id),\n              title: \"Hapus\",\n              children: /*#__PURE__*/_jsx(Delete, {\n                className: \"cursor-pointer ml-4\",\n                size: \"24px\"\n              })\n            }), /*#__PURE__*/_jsx(Tooltip, {\n              onClick: () => {\n                setSelectedID(value.id);\n                setShowList(false);\n                setShowDetail(true);\n              },\n              title: \"Detail\",\n              children: /*#__PURE__*/_jsx(Visibility, {\n                className: \"cursor-pointer ml-4\",\n                size: \"24px\"\n              })\n            })]\n          })]\n        }, index))]\n      }), showDetail && /*#__PURE__*/_jsx(DetailPertanyaan, {\n        id: selectedID,\n        setShowDetail: val => {\n          setShowDetail(val);\n          setShowList(true);\n        }\n      })]\n    }), showAdd && /*#__PURE__*/_jsx(TambahPertanyaan, {\n      setShowAdd: val => {\n        setShowAdd(val);\n        setShowList(true);\n      }\n    })]\n  });\n}\n\nconst DetailPertanyaan = ({\n  setShowDetail,\n  id\n}) => {\n  const accessToken = useSelector(state => state.accessToken);\n  const {\n    0: tipePoin,\n    1: setTipePoin\n  } = useState([]);\n  const {\n    0: tipePoinItem,\n    1: setTipePoinItem\n  } = useState([]);\n  const {\n    0: pertanyaan,\n    1: setPertanyaan\n  } = useState(\"\");\n  const {\n    0: bobot,\n    1: setBobot\n  } = useState(\"\");\n  const {\n    0: tipePoinID,\n    1: setTipePoinID\n  } = useState(\"NULL\");\n  const {\n    addToast\n  } = useToasts();\n  useEffect(() => {\n    getTipePoin();\n    getPertanyaanByID();\n  }, []);\n\n  const getPertanyaanByID = async () => {\n    try {\n      const headers = {\n        Authorization: `Bearer ${accessToken}`\n      };\n      const response = await axiosGeneral.get(`/resources/poin-kuesioner/${id}`, {\n        headers\n      });\n      const {\n        status,\n        data\n      } = response;\n\n      if (status === 200) {\n        setTipePoinItem(data.data.item);\n        setTipePoinID(data.data.id_tipe_poin);\n        setPertanyaan(data.data.pertanyaan);\n        setBobot(data.data.bobot);\n      }\n    } catch (error) {\n      addToast(\"get_pertanyaanByID \" + error.response.data.message, {\n        appearance: \"error\"\n      });\n    }\n  };\n\n  const getTipePoin = async () => {\n    try {\n      const headers = {\n        Authorization: `Bearer ${accessToken}`\n      };\n      setTipePoin([]);\n      const response = await axiosGeneral.get(\"/resources/tipe-poin\", {\n        headers\n      });\n      const {\n        status,\n        data\n      } = response;\n\n      if (status === 200) {\n        setTipePoin(data.data);\n      }\n    } catch (error) {\n      addToast(\"getTipePoin \" + error.response.data.message, {\n        appearance: \"error\"\n      });\n    }\n  };\n\n  const getTipePoinByID = async id => {\n    try {\n      const headers = {\n        Authorization: `Bearer ${accessToken}`\n      };\n      setTipePoinItem([]);\n      const response = await axiosGeneral.get(`/resources/tipe-poin/${id}`, {\n        headers\n      });\n      const {\n        status,\n        data\n      } = response;\n\n      if (status === 200) {\n        const tipePoinItem = data.data.item;\n\n        for (const item of tipePoinItem) {\n          item.label = \"\";\n          item.deskripsi = \"\";\n          item.bobot = 0;\n        }\n\n        setTipePoinItem(tipePoinItem);\n      }\n    } catch (error) {\n      addToast(\"getTipePoinByID \" + error.response.data.message, {\n        appearance: \"error\"\n      });\n    }\n  };\n\n  const updatePertanyaan = async () => {\n    try {\n      const headers = {\n        Authorization: `Bearer ${accessToken}`\n      };\n      const body = {\n        pertanyaan,\n        bobot: parseFloat(bobot) || 0,\n        id_tipe_poin: parseInt(tipePoinID),\n        item: []\n      };\n\n      for (const item of tipePoinItem) {\n        const tempItem = {\n          id_tipe_poin_item: item.id,\n          label: item.label,\n          deskripsi: item.deskripsi,\n          bobot: parseInt(item.bobot) || 0\n        };\n        body.item.push(tempItem);\n      } // console.log(body);\n\n\n      const response = await axiosGeneral.put(`/resources/poin-kuesioner/${id}`, body, {\n        headers\n      });\n      const {\n        status\n      } = response;\n\n      if (status === 200) {\n        addToast(\"Berhasil disimpan\", {\n          appearance: \"success\"\n        });\n        setShowDetail(false);\n      }\n    } catch (error) {\n      addToast(error.response.data.message, {\n        appearance: \"error\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsx(\"h2\", {\n        className: \"text-lg font-bold mb-4\",\n        children: \"Tambah Pertanyaan Baru\"\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"grid grid-flow-col col-auto gap-6 mb-10\",\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"col-span-3\",\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            className: \"text-sm font-bold pb-0\",\n            children: \"Pertanyaan\"\n          }), /*#__PURE__*/_jsx(\"input\", {\n            value: pertanyaan,\n            onChange: e => setPertanyaan(e.target.value),\n            className: \"block w-full  text-sm py-2 px-3 bg-gray-200 rounded focus:outline-none\"\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            className: \"text-sm font-bold pb-0\",\n            children: \"Bobot\"\n          }), /*#__PURE__*/_jsx(\"input\", {\n            value: bobot,\n            onChange: e => setBobot(e.target.value),\n            className: \"block w-full  text-sm py-2 px-3 bg-gray-200 rounded focus:outline-none\"\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            className: \"text-sm font-bold pb-0\",\n            children: \"Tipe Poin\"\n          }), /*#__PURE__*/_jsxs(\"select\", {\n            value: tipePoinID,\n            onChange: e => {\n              getTipePoinByID(e.target.value);\n              setTipePoinID(e.target.value);\n            },\n            className: \"block w-full  text-sm py-2 px-3 bg-gray-200 rounded focus:outline-none\",\n            children: [/*#__PURE__*/_jsx(\"option\", {\n              value: \"NULL\",\n              disabled: true,\n              children: \"Pilih Tipe Poin\"\n            }), tipePoin.map((value, index) => /*#__PURE__*/_jsx(\"option\", {\n              value: value.id,\n              children: value.kode\n            }, index))]\n          })]\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"grid grid-flow-col grid-cols-4 gap-4 border-b-2\",\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          className: \"text-sm font-bold\",\n          children: \"Label\"\n        }), /*#__PURE__*/_jsx(\"p\", {\n          className: \"text-sm font-bold\",\n          children: \"Deskripsi\"\n        }), /*#__PURE__*/_jsx(\"p\", {\n          className: \"text-sm font-bold\",\n          children: \"Bobot\"\n        }), /*#__PURE__*/_jsx(\"p\", {\n          className: \"text-sm font-bold justify-items-center items-center flex justify-center\",\n          children: \"Tipe Kontrol\"\n        })]\n      }), tipePoinItem.map((value, index) => /*#__PURE__*/_jsxs(\"div\", {\n        className: \"grid grid-flow-col grid-cols-4 gap-4 py-2\",\n        children: [/*#__PURE__*/_jsx(\"input\", {\n          value: value.label,\n          onChange: e => {\n            const {\n              value\n            } = e.target;\n            let tempArr = [...tipePoinItem];\n            tempArr[index].label = value;\n            setTipePoinItem(tempArr);\n          },\n          className: \" w-full text-sm py-2 px-3 bg-gray-200 rounded focus:outline-none\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          value: value.deskripsi,\n          onChange: e => {\n            const {\n              value\n            } = e.target;\n            let tempArr = [...tipePoinItem];\n            tempArr[index].deskripsi = value;\n            setTipePoinItem(tempArr);\n          },\n          className: \" w-full text-sm py-2 px-3 bg-gray-200 rounded focus:outline-none\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          value: value.bobot,\n          onChange: e => {\n            const {\n              value\n            } = e.target;\n            let tempArr = [...tipePoinItem];\n            tempArr[index].bobot = parseInt(value);\n            setTipePoinItem(tempArr);\n          },\n          pattern: \"[0-9]\",\n          className: \" w-full text-sm py-2 px-3 bg-gray-200 rounded focus:outline-none\"\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"justify-items-center items-center flex justify-center\",\n          children: [value.control_type === \"radio_button\" && /*#__PURE__*/_jsx(Tooltip, {\n            title: \"Pilihan\",\n            children: /*#__PURE__*/_jsx(RadioButtonChecked, {})\n          }), value.control_type === \"checkbox\" && /*#__PURE__*/_jsx(Tooltip, {\n            title: \"Pilihan ganda\",\n            children: /*#__PURE__*/_jsx(CheckBox, {})\n          }), value.control_type === \"upload_file\" && /*#__PURE__*/_jsx(Tooltip, {\n            title: \"Upload file\",\n            children: /*#__PURE__*/_jsx(Publish, {})\n          }), value.control_type === \"freetext\" && /*#__PURE__*/_jsx(Tooltip, {\n            title: \"Freetext\",\n            children: /*#__PURE__*/_jsx(Subject, {})\n          })]\n        })]\n      }, index)), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"grid grid-cols-10 mt-16\",\n        children: [/*#__PURE__*/_jsx(\"button\", {\n          onClick: updatePertanyaan,\n          disabled: tipePoinItem.length === 0,\n          className: `py-2 bg-blue-400 text-white rounded text-center ${tipePoinItem.length === 0 ? \"cursor-not-allowed\" : \"cursor-pointer\"}`,\n          children: \"Simpan\"\n        }), /*#__PURE__*/_jsx(\"button\", {\n          onClick: () => setShowDetail(false),\n          className: \"py-2 bg-red-400 ml-3 text-white rounded text-center\",\n          children: \"Kembali\"\n        })]\n      })]\n    })\n  });\n};\n\nconst TambahPertanyaan = ({\n  setShowAdd\n}) => {\n  const accessToken = useSelector(state => state.accessToken);\n  const {\n    0: questions,\n    1: setQuestions\n  } = useState([]);\n  const {\n    0: questionTitle,\n    1: setQuestionTitle\n  } = useState(\"\");\n  const {\n    0: questionDescription,\n    1: setQuestionDescription\n  } = useState(\"\");\n  const {\n    0: questionScore,\n    1: setQuestionScore\n  } = useState();\n  const {\n    0: questionType,\n    1: setQuestionType\n  } = useState([]);\n  const {\n    0: tipePoinItem,\n    1: setTipePoinItem\n  } = useState([]);\n  const {\n    addToast\n  } = useToasts();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    fetchTipePoin();\n  }, []);\n\n  const fetchTipePoin = async () => {\n    try {\n      const headers = {\n        Authorization: `Bearer ${accessToken}`\n      };\n      setQuestionType([]);\n      dispatch(setLoading(true));\n      const response = await axiosGeneral.get(\"/resources/tipe-poin\", {\n        headers\n      });\n      const {\n        status,\n        data\n      } = response;\n\n      if (status === 200) {\n        setQuestionType(data.data);\n        dispatch(setLoading(false));\n      }\n    } catch (error) {\n      addToast(\"fetchTipePoin \" + error.response.data.message, {\n        appearance: \"error\"\n      });\n      dispatch(setLoading(false));\n    }\n  };\n\n  const fetchQuestionItemsByID = async index => {\n    try {\n      const headers = {\n        Authorization: `Bearer ${accessToken}`\n      };\n      dispatch(setLoading(true));\n      let newArr = [...questions];\n      newArr[index].item = [];\n      const id = newArr[index].id_tipe_poin;\n      const response = await axiosGeneral.get(`/resources/tipe-poin/${id}`, {\n        headers\n      });\n      const {\n        status,\n        data\n      } = response;\n\n      if (status === 200) {\n        const questionItems = data.data.item;\n\n        for (const item of questionItems) {\n          item.label = \"\";\n          item.deskripsi = \"\";\n          item.bobot = 0;\n        }\n\n        newArr[index].item = questionItems;\n        setQuestions(newArr);\n        dispatch(setLoading(false));\n      }\n    } catch (error) {\n      addToast(error.response.data.message, {\n        appearance: \"error\"\n      });\n      dispatch(setLoading(false));\n    }\n  };\n\n  const createPertanyaan = async () => {\n    try {\n      const headers = {\n        Authorization: `Bearer ${accessToken}`\n      };\n      const body = {\n        pertanyaan,\n        bobot: parseFloat(bobot) || 0,\n        id_tipe_poin: parseInt(tipePoinID),\n        item: []\n      };\n\n      for (const item of tipePoinItem) {\n        const tempItem = {\n          id_tipe_poin_item: item.id,\n          label: item.label,\n          deskripsi: item.deskripsi,\n          bobot: parseInt(item.bobot) || 0\n        };\n        body.item.push(tempItem);\n      }\n\n      dispatch(setLoading(true));\n      const response = await axiosGeneral.post(\"/resources/poin-kuesioner\", body, {\n        headers\n      });\n      const {\n        status\n      } = response;\n\n      if (status === 200) {\n        addToast(\"Berhasil disimpan\", {\n          appearance: \"success\"\n        });\n        dispatch(setLoading(false));\n        setShowAdd(false);\n      }\n    } catch (error) {\n      addToast(error.response.data.message, {\n        appearance: \"error\"\n      });\n      dispatch(setLoading(false));\n    }\n  };\n\n  const addNewQuestion = () => {\n    const body = {\n      pertanyaan: \"\",\n      bobot: 0,\n      id_tipe_poin: 0,\n      item: []\n    };\n    let newQuestion = [...questions];\n    newQuestion.push(body);\n    setQuestions(newQuestion);\n  };\n\n  const removeQuestion = index => {\n    let questionsArr = [...questions];\n    questionsArr.splice(index, 1);\n    setQuestions(questionsArr);\n  };\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsx(\"h2\", {\n        className: \"text-lg font-bold mb-4\",\n        children: \"Tambah Pertanyaan Baru\"\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"bg-white shadow rounded-xl p-6\",\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"flex flex-row gap-6 mb-6\",\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: \"w-4/5\",\n            children: [/*#__PURE__*/_jsx(\"label\", {\n              className: \"block text-sm font-bold pb-0\",\n              children: \"Title\"\n            }), /*#__PURE__*/_jsx(\"input\", {\n              value: questionTitle,\n              onChange: e => setQuestionTitle(e.target.value),\n              className: \"w-full text-sm py-2 px-3 bg-gray-200 rounded focus:outline-none\"\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"w-1/5\",\n            children: [/*#__PURE__*/_jsx(\"label\", {\n              className: \"block text-sm font-bold pb-0\",\n              children: \"Poin\"\n            }), /*#__PURE__*/_jsx(\"input\", {\n              value: questionScore,\n              onChange: e => setQuestionScore(e.target.value.replace(/[^0-9.]/g, \"\").replace(/(\\..*)\\./g, \"$1\")),\n              className: \"w-full text-sm py-2 px-3 bg-gray-200 rounded focus:outline-none\"\n            })]\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            className: \"block text-sm font-bold pb-0\",\n            children: \"Deskripsi\"\n          }), /*#__PURE__*/_jsx(\"textarea\", {\n            value: questionDescription,\n            onChange: e => setQuestionDescription(e.target.value),\n            className: \"w-full text-sm py-3 px-3 bg-gray-200 rounded focus:outline-none h-28 resize-none\"\n          })]\n        })]\n      }), questions.map((question, index) => /*#__PURE__*/_jsxs(\"div\", {\n        className: \"bg-white shadow rounded-xl p-6 my-4 relative\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          onClick: () => removeQuestion(index),\n          className: \"absolute -right-3 -top-3 bg-red-400 cursor-pointer rounded-full p-2\",\n          children: /*#__PURE__*/_jsx(Clear, {\n            htmlColor: \"#FFF\"\n          })\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"grid grid-flow-col col-auto gap-6 mb-10\",\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: \"col-span-3\",\n            children: [/*#__PURE__*/_jsx(\"label\", {\n              className: \"text-sm font-bold pb-0\",\n              children: \"Pertanyaan\"\n            }), /*#__PURE__*/_jsx(\"input\", {\n              value: question.pertanyaan,\n              onChange: e => {\n                const {\n                  value\n                } = e.target;\n                let newArr = [...questions];\n                newArr[index].pertanyaan = value;\n                setQuestions(newArr);\n              },\n              className: \"block w-full  text-sm py-2 px-3 bg-gray-200 rounded focus:outline-none\"\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            children: [/*#__PURE__*/_jsx(\"label\", {\n              className: \"text-sm font-bold pb-0\",\n              children: \"Bobot\"\n            }), /*#__PURE__*/_jsx(\"input\", {\n              value: question.bobot,\n              onChange: e => {\n                const {\n                  value\n                } = e.target;\n                let newArr = [...questions];\n                newArr[index].bobot = value.replace(/[^0-9.]/g, \"\").replace(/(\\..*)\\./g, \"$1\");\n                setQuestions(newArr);\n              },\n              className: \"block w-full  text-sm py-2 px-3 bg-gray-200 rounded focus:outline-none\"\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"max-w-5xl\",\n            children: [/*#__PURE__*/_jsx(\"label\", {\n              className: \"text-sm font-bold pb-0\",\n              children: \"Tipe Poin\"\n            }), /*#__PURE__*/_jsxs(\"select\", {\n              defaultValue: \"NULL\",\n              onChange: e => {\n                const {\n                  value\n                } = e.target;\n                let newArr = [...questions];\n                newArr[index].id_tipe_poin = value;\n                setQuestions(newArr);\n                fetchQuestionItemsByID(index);\n              },\n              className: \"block w-full  text-sm py-2 px-3 bg-gray-200 rounded focus:outline-none\",\n              children: [/*#__PURE__*/_jsx(\"option\", {\n                value: \"NULL\",\n                disabled: true,\n                children: \"Pilih Tipe Poin\"\n              }), questionType.map((value, index) => /*#__PURE__*/_jsxs(\"option\", {\n                value: value.id,\n                children: [\"(\", value.kode, \") \", value.deskripsi]\n              }, index))]\n            })]\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"grid grid-flow-col grid-cols-4 gap-4 border-b-2\",\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            className: \"text-sm font-bold\",\n            children: \"Label\"\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: \"text-sm font-bold\",\n            children: \"Deskripsi\"\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: \"text-sm font-bold\",\n            children: \"Bobot\"\n          }), /*#__PURE__*/_jsx(\"p\", {\n            className: \"text-sm font-bold justify-items-center items-center flex justify-center\",\n            children: \"Tipe Kontrol\"\n          })]\n        }), question.item.map((value, index) => /*#__PURE__*/_jsxs(\"div\", {\n          className: \"grid grid-flow-col grid-cols-4 gap-4 py-2\",\n          children: [/*#__PURE__*/_jsx(\"input\", {\n            value: value.label,\n            onChange: e => {\n              const {\n                value\n              } = e.target;\n              let tempArr = [...tipePoinItem];\n              tempArr[index].label = value;\n              setTipePoinItem(tempArr);\n            },\n            className: \" w-full text-sm py-2 px-3 bg-gray-200 rounded focus:outline-none\"\n          }), /*#__PURE__*/_jsx(\"input\", {\n            value: value.deskripsi,\n            onChange: e => {\n              const {\n                value\n              } = e.target;\n              let tempArr = [...tipePoinItem];\n              tempArr[index].deskripsi = value;\n              setTipePoinItem(tempArr);\n            },\n            className: \" w-full text-sm py-2 px-3 bg-gray-200 rounded focus:outline-none\"\n          }), /*#__PURE__*/_jsx(\"input\", {\n            value: value.bobot,\n            onChange: e => {\n              const {\n                value\n              } = e.target;\n              let tempArr = [...tipePoinItem];\n              tempArr[index].bobot = value.replace(/[^0-9.]/g, \"\").replace(/(\\..*)\\./g, \"$1\");\n              setTipePoinItem(tempArr);\n            },\n            pattern: \"[0-9]{1,5}\",\n            type: \"tel\",\n            maxLength: \"3\",\n            max: \"100\",\n            min: \"1\",\n            className: \" w-full text-sm py-2 px-3 bg-gray-200 rounded focus:outline-none\"\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"justify-items-center items-center flex justify-center\",\n            children: [value.control_type === \"radio_button\" && /*#__PURE__*/_jsx(Tooltip, {\n              title: \"Pilihan\",\n              children: /*#__PURE__*/_jsx(RadioButtonChecked, {})\n            }), value.control_type === \"checkbox\" && /*#__PURE__*/_jsx(Tooltip, {\n              title: \"Pilihan ganda\",\n              children: /*#__PURE__*/_jsx(CheckBox, {})\n            }), value.control_type === \"upload_file\" && /*#__PURE__*/_jsx(Tooltip, {\n              title: \"Upload file\",\n              children: /*#__PURE__*/_jsx(Publish, {})\n            }), value.control_type === \"freetext\" && /*#__PURE__*/_jsx(Tooltip, {\n              title: \"Freetext\",\n              children: /*#__PURE__*/_jsx(Subject, {})\n            })]\n          })]\n        }, index))]\n      }, index)), /*#__PURE__*/_jsx(\"button\", {\n        onClick: addNewQuestion,\n        className: \"bg-gray-100 font-bold text-gray-700 border-dashed border-2 hover:bg-gray-200 cursor-pointer focus:outline-none rounded py-2 my-4 w-full block\",\n        children: \"Tambah Item Pertanyaan\"\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"grid grid-cols-10 mt-16\",\n        children: /*#__PURE__*/_jsx(\"button\", {\n          onClick: () => console.log(questions) // disabled={tipePoinItem.length === 0}\n          ,\n          className: `py-2 bg-blue-400 mr-3 text-white rounded text-center ${tipePoinItem.length === 0 ? \"cursor-not-allowed\" : \"cursor-pointer\"}`,\n          children: \"Simpan\"\n        })\n      })]\n    })\n  });\n};","map":null,"metadata":{},"sourceType":"module"}