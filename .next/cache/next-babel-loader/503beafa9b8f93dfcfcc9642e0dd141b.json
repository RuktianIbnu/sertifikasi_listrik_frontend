{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\project\\\\sertifikasi_listrik_frontend\\\\pages\\\\index.js\";\nimport Head from \"next/head\";\nimport Router from \"next/router\";\nimport { Container, Row, Col, Form, Button, Image } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState, useEffect } from \"react\";\nimport { axiosGeneral } from \"../helpers/global\";\nimport { setAccessToken, setUser, setLoading } from \"../store/actionCreator\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { useToasts } from \"react-toast-notifications\";\nconst FormSchema = Yup.object().shape({\n  password: Yup.string().required(\"* Password tidak boleh kosong\")\n});\nconst FormSchemaPassword = Yup.object().shape({\n  password: Yup.string().required(\"* Password tidak boleh kosong\")\n});\nexport default function Home() {\n  const dispatch = useDispatch();\n  const accessToken = useSelector(state => state.accessToken);\n  const {\n    addToast\n  } = useToasts();\n  useEffect(() => {\n    if (accessToken) {\n      Router.replace(\"/dashboard\");\n    }\n\n    const url = new URLSearchParams(location.search);\n\n    if (url.get(\"token\") != null) {\n      setTokenVerify(url.get(\"token\").toString());\n      setIsNewPassword(true);\n    }\n  }, []);\n\n  const doLogin = async values => {\n    try {\n      dispatch(setLoading(true));\n      const body = {\n        username: values.username,\n        password: values.password\n      };\n      const response = await axiosGeneral.post(\"/login\", body);\n      const {\n        status,\n        data\n      } = response; // console.log(data);\n\n      if (status === 200) {\n        dispatch(setUser(data.data.user_metadata));\n        dispatch(setAccessToken(data.data.token));\n        Router.replace(\"/dashboard\");\n        dispatch(setLoading(false));\n      }\n    } catch (error) {\n      dispatch(setLoading(false));\n      addToast(error.response.data.message, {\n        appearance: \"error\"\n      });\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      username: \"\",\n      password: \"\"\n    },\n    validationSchema: FormSchema,\n    onSubmit: values => doLogin(values)\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mt-52\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 bg-blue-300 my-10 \",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-center text-green-600 my-4\",\n              children: \"LISTRIK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"my-10\",\n              onSubmit: formik.handleSubmit,\n              method: \"POST\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Username \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"custom-input form-control\",\n                  type: \"text\",\n                  autoComplete: \"false\",\n                  name: \"username\",\n                  onChange: formik.handleChange,\n                  value: formik.values.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 19\n                }, this), formik.errors.username && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs text-red-500\",\n                  children: formik.errors.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  for: \"exampleInputPassword1\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control\",\n                  placeholder: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 19\n                }, this), formik.errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs text-red-500\",\n                  children: formik.errors.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button // disabled={formik.isSubmitting}\n              , {\n                variant: \"warning\",\n                type: \"submit\",\n                className: \"mt-4 font-bold text-base\",\n                block: true,\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n} // return (\n// <>\n//   <Head>\n//     <title>Login - LISTRIK</title>\n//   </Head>\n//   <Container className=\"bg-green-500 justify-content-md-center mt-28 \">\n//     <Row>\n//         <h1>Listrik</h1>\n//         <h3 className=\"font-semibold\">Masuk</h3>\n//         <form onSubmit={formik.handleSubmit} method=\"POST\">\n//           <div className=\"mt-5\">\n//             <Form.Label>Username</Form.Label>\n//             <Form.Control\n//               className=\"custom-input\"\n//               type=\"text\"\n//               autoComplete=\"false\"\n//               name=\"email\"\n//               onChange={formik.handleChange}\n//               value={formik.values.email}\n//             />\n//             {formik.errors.email && (\n//               <span className=\"text-xs text-red-500\">\n//                 {formik.errors.email}\n//               </span>\n//             )}\n//           </div>\n//           <div>\n//             <Form.Label htmlFor=\"password\">Password</Form.Label>\n//             <Form.Control\n//               className=\"custom-input\"\n//               type=\"password\"\n//               autoComplete=\"true\"\n//               name=\"password\"\n//               onChange={formik.handleChange}\n//               value={formik.values.password}\n//             />\n//             {formik.errors.password && (\n//               <span className=\"text-xs text-red-500\">\n//                 {formik.errors.password}\n//               </span>\n//             )}\n//           </div>\n//           <Button\n//             disabled={formik.isSubmitting}\n//             variant=\"warning\"\n//             type=\"submit\"\n//             className=\"mt-4\"\n//             block\n//           >\n//             Login\n//           </Button>\n//         </form>\n//     </Row>\n//   </Container>\n//   <style>{`\n//     .imigrasi-logo {\n//       width:90%;\n//       height: 50vh;\n//       object-fit: contain;\n//       margin-top:20vh;\n//       margin-left: auto;\n//       margin-right: auto;\n//       display:block;\n//     }\n//     .col-right {\n//       background: #03045E;\n//       height: 100vh;\n//     }\n//     .col-left {\n//       background: #0e979c;\n//       height: 100vh;\n//       max-height: 100vh;\n//       padding-left: 36px;\n//       padding-right: 36px;\n//     }\n//     h1 {\n//       font-family: \"Poppins\", sans-serif;\n//       font-weight: bold;\n//       font-size: 3.75rem;\n//       color: #0e979c;\n//       text-align:center;\n//       margin-bottom: 75px;\n//     }\n//     h3 {\n//       font-weight: 600;\n//     }\n//     .inline-icon {\n//       position: absolute;\n//       bottom: .45rem;\n//       right: .45rem;\n//       font-size: 24px;\n//       cursor:pointer;\n//     }\n//     .btn-warning {\n//       color: #2B2D42 !important;\n//       font-weight: bold !important;\n//       border-radius: 10px;\n//       text-transform: uppercase;\n//       height:40px;\n//       font-size: 14px;\n//     }\n//     .custom-input {\n//       background: #f5f5f5;\n//       border: 1px solid #a8dadc !important;\n//       border-radius: 10px !important;\n//       font-size: 14px !important;\n//       color: #445455 !important;\n//       height:40px;\n//       padding-left:17px;\n//     }\n//     .custom-input:focus {\n//       background: #f5f5f5;\n//     }\n//   `}</style>\n// </>\n// );\n// }","map":{"version":3,"sources":["C:/project/sertifikasi_listrik_frontend/pages/index.js"],"names":["Head","Router","Container","Row","Col","Form","Button","Image","useSelector","useDispatch","useState","useEffect","axiosGeneral","setAccessToken","setUser","setLoading","Yup","useFormik","useToasts","FormSchema","object","shape","password","string","required","FormSchemaPassword","Home","dispatch","accessToken","state","addToast","replace","url","URLSearchParams","location","search","get","setTokenVerify","toString","setIsNewPassword","doLogin","values","body","username","response","post","status","data","user_metadata","token","error","message","appearance","formik","initialValues","validationSchema","onSubmit","handleSubmit","handleChange","errors"],"mappings":"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":["import Head from \"next/head\";\r\nimport Router from \"next/router\";\r\nimport { Container, Row, Col, Form, Button, Image } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { axiosGeneral } from \"../helpers/global\";\r\nimport { setAccessToken, setUser, setLoading } from \"../store/actionCreator\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nconst FormSchema = Yup.object().shape({\r\n  password: Yup.string().required(\"* Password tidak boleh kosong\"),\r\n});\r\n\r\nconst FormSchemaPassword = Yup.object().shape({\r\n  password: Yup.string().required(\"* Password tidak boleh kosong\"),\r\n});\r\n\r\nexport default function Home() {\r\n  const dispatch = useDispatch();\r\n  const accessToken = useSelector((state) => state.accessToken);\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    if (accessToken) {\r\n      Router.replace(\"/dashboard\");\r\n    }\r\n\r\n    const url = new URLSearchParams(location.search);\r\n    if (url.get(\"token\") != null) {\r\n      setTokenVerify(url.get(\"token\").toString());\r\n      setIsNewPassword(true);\r\n    }\r\n  }, []);\r\n\r\n  const doLogin = async (values) => {\r\n    try {\r\n      dispatch(setLoading(true));\r\n      const body = {\r\n        username: values.username,\r\n        password: values.password,\r\n      };\r\n      const response = await axiosGeneral.post(\"/login\", body);\r\n      const { status, data } = response;\r\n      // console.log(data);\r\n      if (status === 200) {\r\n        dispatch(setUser(data.data.user_metadata));\r\n        dispatch(setAccessToken(data.data.token));\r\n        Router.replace(\"/dashboard\");\r\n        dispatch(setLoading(false));\r\n      }\r\n    } catch (error) {\r\n      dispatch(setLoading(false));\r\n      addToast(error.response.data.message, { appearance: \"error\" });\r\n    }\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: FormSchema,\r\n    onSubmit: (values) => doLogin(values),\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"container mt-52\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-md-6 bg-blue-300 my-10 \">\r\n              <h1 className=\"text-center text-green-600 my-4\">LISTRIK</h1>\r\n              <form\r\n                className=\"my-10\"\r\n                onSubmit={formik.handleSubmit}\r\n                method=\"POST\"\r\n              >\r\n                <div className=\"form-group\">\r\n                  <label>Username </label>\r\n                  <input\r\n                    className=\"custom-input form-control\"\r\n                    type=\"text\"\r\n                    autoComplete=\"false\"\r\n                    name=\"username\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.username}\r\n                  />\r\n                  {formik.errors.username && (\r\n                    <span className=\"text-xs text-red-500\">\r\n                      {formik.errors.username}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label for=\"exampleInputPassword1\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Password\"\r\n                  />\r\n                  {formik.errors.password && (\r\n              <span className=\"text-xs text-red-500\">\r\n                {formik.errors.password}\r\n              </span>\r\n            )}\r\n                </div>\r\n                <Button\r\n                  // disabled={formik.isSubmitting}\r\n                  variant=\"warning\"\r\n                  type=\"submit\"\r\n                  className=\"mt-4 font-bold text-base\"\r\n                  block\r\n                >\r\n                  Login\r\n                </Button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n// return (\r\n// <>\r\n//   <Head>\r\n//     <title>Login - LISTRIK</title>\r\n//   </Head>\r\n//   <Container className=\"bg-green-500 justify-content-md-center mt-28 \">\r\n//     <Row>\r\n//         <h1>Listrik</h1>\r\n//         <h3 className=\"font-semibold\">Masuk</h3>\r\n//         <form onSubmit={formik.handleSubmit} method=\"POST\">\r\n//           <div className=\"mt-5\">\r\n//             <Form.Label>Username</Form.Label>\r\n//             <Form.Control\r\n//               className=\"custom-input\"\r\n//               type=\"text\"\r\n//               autoComplete=\"false\"\r\n//               name=\"email\"\r\n//               onChange={formik.handleChange}\r\n//               value={formik.values.email}\r\n//             />\r\n//             {formik.errors.email && (\r\n//               <span className=\"text-xs text-red-500\">\r\n//                 {formik.errors.email}\r\n//               </span>\r\n//             )}\r\n//           </div>\r\n//           <div>\r\n//             <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n//             <Form.Control\r\n//               className=\"custom-input\"\r\n//               type=\"password\"\r\n//               autoComplete=\"true\"\r\n//               name=\"password\"\r\n//               onChange={formik.handleChange}\r\n//               value={formik.values.password}\r\n//             />\r\n//             {formik.errors.password && (\r\n//               <span className=\"text-xs text-red-500\">\r\n//                 {formik.errors.password}\r\n//               </span>\r\n//             )}\r\n//           </div>\r\n//           <Button\r\n//             disabled={formik.isSubmitting}\r\n//             variant=\"warning\"\r\n//             type=\"submit\"\r\n//             className=\"mt-4\"\r\n//             block\r\n//           >\r\n//             Login\r\n//           </Button>\r\n//         </form>\r\n//     </Row>\r\n//   </Container>\r\n//   <style>{`\r\n//     .imigrasi-logo {\r\n//       width:90%;\r\n//       height: 50vh;\r\n//       object-fit: contain;\r\n//       margin-top:20vh;\r\n//       margin-left: auto;\r\n//       margin-right: auto;\r\n//       display:block;\r\n//     }\r\n//     .col-right {\r\n//       background: #03045E;\r\n//       height: 100vh;\r\n//     }\r\n//     .col-left {\r\n//       background: #0e979c;\r\n//       height: 100vh;\r\n//       max-height: 100vh;\r\n//       padding-left: 36px;\r\n//       padding-right: 36px;\r\n//     }\r\n//     h1 {\r\n//       font-family: \"Poppins\", sans-serif;\r\n//       font-weight: bold;\r\n//       font-size: 3.75rem;\r\n//       color: #0e979c;\r\n//       text-align:center;\r\n//       margin-bottom: 75px;\r\n//     }\r\n//     h3 {\r\n//       font-weight: 600;\r\n//     }\r\n//     .inline-icon {\r\n//       position: absolute;\r\n//       bottom: .45rem;\r\n//       right: .45rem;\r\n//       font-size: 24px;\r\n//       cursor:pointer;\r\n//     }\r\n//     .btn-warning {\r\n//       color: #2B2D42 !important;\r\n//       font-weight: bold !important;\r\n//       border-radius: 10px;\r\n//       text-transform: uppercase;\r\n//       height:40px;\r\n//       font-size: 14px;\r\n//     }\r\n//     .custom-input {\r\n//       background: #f5f5f5;\r\n//       border: 1px solid #a8dadc !important;\r\n//       border-radius: 10px !important;\r\n//       font-size: 14px !important;\r\n//       color: #445455 !important;\r\n//       height:40px;\r\n//       padding-left:17px;\r\n//     }\r\n//     .custom-input:focus {\r\n//       background: #f5f5f5;\r\n//     }\r\n//   `}</style>\r\n// </>\r\n// );\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}