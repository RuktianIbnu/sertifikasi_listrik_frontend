{"ast":null,"code":"import { persistStore, persistReducer } from \"redux-persist\";\nimport { createStore, combineReducers } from \"redux\";\nimport { CookieStorage } from \"redux-persist-cookie-storage\";\nimport Cookies from \"js-cookie\";\nimport { createWrapper } from \"next-redux-wrapper\";\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\nimport * as reducers from \"./reducers\";\nconst in24Hours = new Date(new Date().getTime() + 24 * 60 * 60 * 1000);\nconst persistConfig = {\n  key: \"root\",\n  storage: new CookieStorage(Cookies, {\n    setCookieOptions: {\n      // sameSite: \"strict\",\n      expires: in24Hours\n    }\n  }),\n  whitelist: [\"user\", \"accessToken\", \"profile\"]\n};\nconst allReducers = combineReducers(reducers);\nconst persistedReducer = persistReducer(persistConfig, allReducers);\nexport const store = createStore(persistedReducer, devToolsEnhancer());\n\nconst makeStore = () => store;\n\nexport const wrapper = createWrapper(makeStore, {\n  debug: true\n});\nexport const persistor = persistStore(store);","map":null,"metadata":{},"sourceType":"module"}