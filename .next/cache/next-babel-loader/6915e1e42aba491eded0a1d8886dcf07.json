{"ast":null,"code":"import { persistStore, persistReducer } from \"redux-persist\";\nimport { createStore, combineReducers } from \"redux\";\nimport storage from \"redux-persist/lib/storage\";\nimport { createWrapper } from \"next-redux-wrapper\";\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\nimport expireReducer from \"redux-persist-expire\";\nimport * as reducers from \"./reducers\";\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"user\", \"accessToken\", \"profile\"],\n  transform: [expireReducer(\"accessToken\", {\n    expireSeconds: 20,\n    expiredState: null,\n    persistedAtKey: \"loadedAt\"\n  })]\n};\nconst allReducers = combineReducers(reducers);\nconst persistedReducer = persistReducer(persistConfig, allReducers);\nconst store = createStore(persistedReducer, devToolsEnhancer());\n\nconst makeStore = () => store;\n\nexport const wrapper = createWrapper(makeStore, {\n  debug: true\n});\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["C:/e-survey-dashboard/store/store.js"],"names":["persistStore","persistReducer","createStore","combineReducers","storage","createWrapper","devToolsEnhancer","expireReducer","reducers","persistConfig","key","whitelist","transform","expireSeconds","expiredState","persistedAtKey","allReducers","persistedReducer","store","makeStore","wrapper","debug","persistor"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AAEA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBN,EAAAA,OAFoB;AAGpBO,EAAAA,SAAS,EAAE,CAAC,MAAD,EAAS,aAAT,EAAwB,SAAxB,CAHS;AAIpBC,EAAAA,SAAS,EAAE,CACTL,aAAa,CAAC,aAAD,EAAgB;AAC3BM,IAAAA,aAAa,EAAE,EADY;AAE3BC,IAAAA,YAAY,EAAE,IAFa;AAG3BC,IAAAA,cAAc,EAAE;AAHW,GAAhB,CADJ;AAJS,CAAtB;AAaA,MAAMC,WAAW,GAAGb,eAAe,CAACK,QAAD,CAAnC;AACA,MAAMS,gBAAgB,GAAGhB,cAAc,CAACQ,aAAD,EAAgBO,WAAhB,CAAvC;AAEA,MAAME,KAAK,GAAGhB,WAAW,CAACe,gBAAD,EAAmBX,gBAAgB,EAAnC,CAAzB;;AACA,MAAMa,SAAS,GAAG,MAAMD,KAAxB;;AACA,OAAO,MAAME,OAAO,GAAGf,aAAa,CAACc,SAAD,EAAY;AAAEE,EAAAA,KAAK,EAAE;AAAT,CAAZ,CAA7B;AACP,OAAO,MAAMC,SAAS,GAAGtB,YAAY,CAACkB,KAAD,CAA9B","sourcesContent":["import { persistStore, persistReducer } from \"redux-persist\";\r\nimport { createStore, combineReducers } from \"redux\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { createWrapper } from \"next-redux-wrapper\";\r\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\r\nimport expireReducer from \"redux-persist-expire\";\r\n\r\nimport * as reducers from \"./reducers\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  whitelist: [\"user\", \"accessToken\", \"profile\"],\r\n  transform: [\r\n    expireReducer(\"accessToken\", {\r\n      expireSeconds: 20,\r\n      expiredState: null,\r\n      persistedAtKey: \"loadedAt\",\r\n    }),\r\n  ],\r\n};\r\n\r\nconst allReducers = combineReducers(reducers);\r\nconst persistedReducer = persistReducer(persistConfig, allReducers);\r\n\r\nconst store = createStore(persistedReducer, devToolsEnhancer());\r\nconst makeStore = () => store;\r\nexport const wrapper = createWrapper(makeStore, { debug: true });\r\nexport const persistor = persistStore(store);\r\n"]},"metadata":{},"sourceType":"module"}