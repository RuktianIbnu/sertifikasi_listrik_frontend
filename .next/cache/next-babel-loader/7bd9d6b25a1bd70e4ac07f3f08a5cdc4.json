{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport { Transition } from \"@tailwindui/react\";\nimport { Modal, Button } from \"react-bootstrap\";\nexport default function ModalBootstrap(_ref) {\n  let {\n    show,\n    onClickBackdrop,\n    modalTitle,\n    children,\n    modalSize\n  } = _ref,\n      otherProps = _objectWithoutProperties(_ref, [\"show\", \"onClickBackdrop\", \"modalTitle\", \"children\", \"modalSize\"]);\n\n  return /*#__PURE__*/_jsxs(Modal, {\n    size: modalSize,\n    show: show,\n    onHide: onClickBackdrop,\n    children: [/*#__PURE__*/_jsx(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsx(Modal.Title, {\n        children: /*#__PURE__*/_jsx(\"span\", {\n          className: \"text-center font-bold\",\n          children: modalTitle\n        })\n      })\n    }), /*#__PURE__*/_jsx(Modal.Body, {\n      children: children\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}