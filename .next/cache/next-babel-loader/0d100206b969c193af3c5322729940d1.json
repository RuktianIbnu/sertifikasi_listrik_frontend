{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Head from \"next/head\";\nimport Link from \"next/link\";\nimport Router from \"next/router\";\nimport { Container, Row, Col, Form, Button, Image } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState, useEffect } from \"react\";\nimport { axiosGeneral } from \"../helpers/global\";\nimport { setAccessToken, setUser, setLoading } from \"../store/actionCreator\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { useToasts } from \"react-toast-notifications\";\nimport OTPInput, { ResendOTP } from \"otp-input-react\";\nimport Input from \"../components/Input\";\nimport { FormatListBulletedSharp } from \"@material-ui/icons\";\nconst FormSchema = Yup.object().shape({\n  email: Yup.string().email().required(\"* Email tidak boleh kosong\"),\n  password: Yup.string().required(\"* Password tidak boleh kosong\")\n});\nconst FormSchemaPassword = Yup.object().shape({\n  password: Yup.string().required(\"* Password tidak boleh kosong\"),\n  ulangi_password: Yup.string().required(\"*Ulangi Password tidak boleh kosong\"),\n  ulangi_password: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Password tidak sama!\")\n});\nexport default function Home() {\n  const dispatch = useDispatch();\n  const accessToken = useSelector(state => state.accessToken);\n  const {\n    addToast\n  } = useToasts();\n  const {\n    0: OTP,\n    1: setOTP\n  } = useState();\n  const {\n    0: isOtp,\n    1: setIsOtp\n  } = useState(false);\n  const {\n    0: tokenTemp,\n    1: setTokenTemp\n  } = useState(\"\");\n  const {\n    0: tokenVerify,\n    1: setTokenVerify\n  } = useState();\n  const {\n    0: isNewPassword,\n    1: setIsNewPassword\n  } = useState(false);\n  useEffect(() => {\n    if (accessToken) {\n      Router.replace(\"/dashboard\");\n    }\n\n    const url = new URLSearchParams(location.search);\n\n    if (url.get(\"token\") != null) {\n      setTokenVerify(url.get(\"token\").toString());\n      setIsNewPassword(true);\n    }\n  }, []);\n\n  const doLogin = async values => {\n    try {\n      dispatch(setLoading(true));\n      const body = {\n        email: values.email,\n        password: values.password,\n        app_id: \"admin-panel\"\n      };\n      const response = await axiosGeneral.post(\"/login\", body);\n      const {\n        status,\n        data\n      } = response; // console.log(data);\n\n      if (status === 200) {\n        setTokenTemp(data.data.temp_token);\n        dispatch(setLoading(false));\n        setIsOtp(true);\n        setOTP(\"\");\n      }\n    } catch (error) {\n      dispatch(setLoading(false));\n      addToast(error.response.data.message, {\n        appearance: \"error\"\n      });\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema: FormSchema,\n    onSubmit: values => doLogin(values)\n  });\n\n  const renderButton = buttonProps => {\n    return /*#__PURE__*/_jsx(\"button\", _objectSpread(_objectSpread({\n      className: \"px-5 py-2 bg-blue-300 rounded text-white mb-4 text-sm\"\n    }, buttonProps), {}, {\n      children: buttonProps.remainingTime !== 0 ? `Kirim Ulang (${buttonProps.remainingTime}s)` : \"Kirim Ulang\"\n    }));\n  };\n\n  const renderTime = remainingTime => {\n    return /*#__PURE__*/_jsx(_Fragment, {});\n  };\n\n  const doMatchOtp = async () => {\n    try {\n      const body = {\n        otp: OTP,\n        temp_token: tokenTemp\n      };\n      dispatch(setLoading(true));\n      const response = await axiosGeneral.post(\"/verify-otp\", body);\n      const {\n        status,\n        data\n      } = response; //console.log(status);\n\n      if (status === 200) {\n        dispatch(setUser(data.data.user_metadata));\n        dispatch(setAccessToken(data.data.token));\n        Router.replace(\"/dashboard\");\n        dispatch(setLoading(false));\n      }\n    } catch (error) {\n      dispatch(setLoading(false));\n      addToast(\"Gagal melanjutkan\", {\n        appearance: \"error\"\n      });\n      setOTP(\"\");\n    }\n  };\n\n  const doResendOtp = async () => {\n    try {\n      const body = {\n        temp_token: tokenTemp\n      };\n      dispatch(setLoading(true));\n      const response = await axiosGeneral.post(\"/resend-otp\", body);\n      const {\n        status,\n        data\n      } = response;\n\n      if (status === 200) {\n        addToast(\"Silahkan cek email anda\", {\n          appearance: \"success\"\n        });\n        dispatch(setLoading(false));\n      }\n    } catch (error) {\n      dispatch(setLoading(false));\n      addToast(\"kesalahan request data\", {\n        appearance: \"error\"\n      });\n    }\n  };\n\n  const doChangePassword = async values => {\n    try {\n      if (!values) return;\n      const body = {\n        new_password: formikPassword.values.password,\n        temp_token: tokenVerify\n      };\n      console.log(body, tokenVerify);\n      dispatch(setLoading(true));\n      const response = await axiosGeneral.post(`/verify-forget-password`, body);\n      const {\n        status,\n        data\n      } = response;\n      console.log(status, data.data);\n\n      if (status === 200) {\n        addToast(\"Password berhasil di ganti\", {\n          appearance: \"success\"\n        });\n        setIsNewPassword(false);\n        dispatch(setLoading(false));\n      } else {\n        addToast(\"Password berhasil di ganti\", {\n          appearance: \"warning\"\n        });\n        dispatch(setLoading(false));\n      }\n    } catch (error) {\n      dispatch(setLoading(false));\n      addToast(\"Password gagal di ganti\", {\n        appearance: \"error\"\n      });\n    }\n  };\n\n  const formikPassword = useFormik({\n    initialValues: {\n      password: \"\",\n      ulangi_password: \"\"\n    },\n    validationSchema: FormSchemaPassword,\n    enableReinitialize: false,\n    onSubmit: values => doChangePassword(values)\n  });\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: \"Login - E-Survey\"\n      })\n    }), /*#__PURE__*/_jsx(Container, {\n      fluid: true,\n      children: /*#__PURE__*/_jsxs(Row, {\n        className: \"overflow-hidden\",\n        children: [/*#__PURE__*/_jsx(Col, {\n          className: \"col-left\",\n          xl: \"3\",\n          lg: \"3\",\n          children: isNewPassword == true ? /*#__PURE__*/_jsx(_Fragment, {\n            children: /*#__PURE__*/_jsx(\"div\", {\n              className: \"on-center\",\n              children: /*#__PURE__*/_jsxs(\"form\", {\n                onSubmit: formikPassword.handleSubmit,\n                method: \"POST\",\n                children: [/*#__PURE__*/_jsx(\"h1\", {\n                  children: \"E-Survey\"\n                }), /*#__PURE__*/_jsx(\"h3\", {\n                  children: \"Lupa Password\"\n                }), /*#__PURE__*/_jsxs(Form.Group, {\n                  className: \"mt-5\",\n                  children: [/*#__PURE__*/_jsx(Form.Label, {\n                    children: \"Password\"\n                  }), /*#__PURE__*/_jsx(Form.Control, {\n                    className: \"custom-input\",\n                    placeholder: \"Password\",\n                    autoComplete: \"false\",\n                    type: \"password\",\n                    name: \"password\",\n                    onChange: formikPassword.handleChange,\n                    value: formikPassword.values.password\n                  }), formikPassword.errors.password && /*#__PURE__*/_jsx(\"span\", {\n                    className: \"text-xs text-red-500\",\n                    children: formikPassword.errors.password\n                  }), /*#__PURE__*/_jsx(Form.Label, {\n                    children: \"Ulangi Password\"\n                  }), /*#__PURE__*/_jsx(Form.Control, {\n                    className: \"custom-input\",\n                    placeholder: \"Ulangi Password\",\n                    autoComplete: \"false\",\n                    type: \"password\",\n                    name: \"ulangi_password\",\n                    onChange: formikPassword.handleChange,\n                    value: formikPassword.values.ulangi_password\n                  }), formikPassword.errors.ulangi_password && /*#__PURE__*/_jsx(\"span\", {\n                    className: \"text-xs text-red-500\",\n                    children: formikPassword.errors.ulangi_password\n                  })]\n                }), /*#__PURE__*/_jsx(Button, {\n                  variant: \"warning\",\n                  type: \"submit\",\n                  className: \"mt-5\",\n                  block: true,\n                  children: \"Kirim\"\n                }), /*#__PURE__*/_jsx(\"div\", {\n                  className: \"flex flex-row justify-center mt-4\",\n                  children: /*#__PURE__*/_jsx(\"div\", {\n                    className: \"font-semibold justify-left\",\n                    children: /*#__PURE__*/_jsx(\"span\", {\n                      className: \"text-blue-600 justify-left\",\n                      type: \"button\",\n                      onClick: () => setIsNewPassword(false),\n                      children: \"Kembali ke halaman login\"\n                    })\n                  })\n                })]\n              })\n            })\n          }) : /*#__PURE__*/_jsx(_Fragment, {\n            children: isOtp == false ? /*#__PURE__*/_jsx(_Fragment, {\n              children: /*#__PURE__*/_jsxs(\"div\", {\n                className: \"on-center\",\n                children: [/*#__PURE__*/_jsx(\"h1\", {\n                  children: \"E-Survey\"\n                }), /*#__PURE__*/_jsx(\"h3\", {\n                  className: \"font-semibold\",\n                  children: \"Masuk\"\n                }), /*#__PURE__*/_jsxs(\"form\", {\n                  onSubmit: formik.handleSubmit,\n                  method: \"POST\",\n                  children: [/*#__PURE__*/_jsxs(Form.Group, {\n                    className: \"mt-5\",\n                    children: [/*#__PURE__*/_jsx(Form.Label, {\n                      children: \"Email\"\n                    }), /*#__PURE__*/_jsx(Form.Control, {\n                      className: \"custom-input\",\n                      type: \"email\",\n                      autoComplete: \"false\",\n                      name: \"email\",\n                      onChange: formik.handleChange,\n                      value: formik.values.email\n                    }), formik.errors.email && /*#__PURE__*/_jsx(\"span\", {\n                      className: \"text-xs text-red-500\",\n                      children: formik.errors.email\n                    })]\n                  }), /*#__PURE__*/_jsxs(Form.Group, {\n                    children: [/*#__PURE__*/_jsx(Form.Label, {\n                      htmlFor: \"password\",\n                      children: \"Password\"\n                    }), /*#__PURE__*/_jsx(Form.Control, {\n                      className: \"custom-input\",\n                      type: \"password\",\n                      autoComplete: \"true\",\n                      name: \"password\",\n                      onChange: formik.handleChange,\n                      value: formik.values.password\n                    }), formik.errors.password && /*#__PURE__*/_jsx(\"span\", {\n                      className: \"text-xs text-red-500\",\n                      children: formik.errors.password\n                    })]\n                  }), /*#__PURE__*/_jsx(Link, {\n                    href: \"/forgot-password\",\n                    children: /*#__PURE__*/_jsx(\"span\", {\n                      className: \"forgot-password-link\",\n                      children: \"Lupa Password?\"\n                    })\n                  }), /*#__PURE__*/_jsx(Button, {\n                    disabled: formik.isSubmitting,\n                    variant: \"warning\",\n                    type: \"submit\",\n                    className: \"mt-4\",\n                    block: true,\n                    children: \"Login\"\n                  })]\n                })]\n              })\n            }) : /*#__PURE__*/_jsxs(\"div\", {\n              className: \"on-center\",\n              children: [/*#__PURE__*/_jsx(ResendOTP, {\n                renderButton: renderButton,\n                renderTime: renderTime,\n                maxTime: 90,\n                style: {\n                  justifyContent: \"center\"\n                },\n                onResendClick: () => doResendOtp()\n              }), /*#__PURE__*/_jsx(OTPInput, {\n                value: OTP,\n                onChange: value => setOTP(value),\n                autoFocus: true,\n                OTPLength: 5,\n                otpType: \"number\",\n                inputClassName: \"outline-none rounded font-bold mx-2\",\n                inputStyles: {\n                  color: \"#000\",\n                  backgroundColor: \"#F2F2F2\",\n                  width: \"2.8rem\",\n                  height: 50\n                },\n                style: {\n                  justifyContent: \"center\",\n                  width: \"auto\",\n                  marginLeft: 20\n                }\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: \"mt-6 w-full\",\n                onClick: () => doMatchOtp(),\n                children: /*#__PURE__*/_jsx(Button, {\n                  className: \"w-full\",\n                  children: \"Lanjutkan\"\n                })\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: \"text-xs md:text-base text-center w-full mt-4 font-semibold\",\n                children: /*#__PURE__*/_jsx(\"span\", {\n                  className: \"text-blue-600\",\n                  type: \"button\",\n                  onClick: () => setIsOtp(false),\n                  children: \"Kembali ke halaman login\"\n                })\n              })]\n            })\n          })\n        }), /*#__PURE__*/_jsx(Col, {\n          className: \"col-right\",\n          xl: \"9\",\n          lg: \"9\",\n          children: /*#__PURE__*/_jsx(Image, {\n            src: \"https://www.imigrasi.go.id/uploads/logo/10-52-13-logo-imigrasi_-_Copy.png\",\n            alt: \"Logo Imigrasi\",\n            className: \"imigrasi-logo mx-auto\",\n            fluid: true\n          })\n        })]\n      })\n    }), /*#__PURE__*/_jsx(\"style\", {\n      children: `\n        .forgot-password-link {\n          font-size: 13px;\n          color: #4361EE;\n          text-align: right;\n          display:block;\n          cursor: pointer;\n        }\n        .imigrasi-logo {\n          width:90%;\n          height: 50vh;\n          object-fit: contain;\n          margin-top:20vh;\n          margin-left: auto;\n          margin-right: auto;\n          display:block;\n        }\n        .on-center {\n          margin-top:60%;\n        }\n        .col-right {\n          background: #03045E;\n          height: 100vh;\n        }\n        .col-left {\n          background: #FDFDFD;\n          height: 100vh;\n          max-height: 100vh;\n          padding-left: 36px;\n          padding-right: 36px;\n        }\n        h1 {\n          font-family: \"Poppins\", sans-serif;\n          font-weight: bold;\n          font-size: 3.75rem;\n          color: #323232;\n          text-align:center;\n          margin-bottom: 75px;\n        }\n        h3 {\n          font-weight: 600;\n        }\n        .inline-icon {\n          position: absolute;\n          bottom: .45rem;\n          right: .45rem;\n          font-size: 24px;\n          cursor:pointer;\n        }\n        .btn-warning {\n          color: #2B2D42 !important;\n          font-weight: bold !important;\n          border-radius: 10px;\n          text-transform: uppercase;\n          height:40px;\n          font-size: 14px;\n        }\n        .custom-input {\n          background: #f5f5f5;\n          border: 1px solid #a8dadc !important;\n          border-radius: 10px !important;\n          font-size: 14px !important;\n          color: #445455 !important;\n          height:40px;\n          padding-left:17px;\n        }\n        .custom-input:focus {\n          background: #f5f5f5;\n        }\n      `\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}