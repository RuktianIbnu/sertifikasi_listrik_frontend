{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Modal from \"../../components/Modal\";\nimport Input from \"../../components/Input\";\nimport Button from \"../../components/Button\";\nimport { axiosGeneral } from \"../../helpers/global\";\nimport MainLayout from \"../../components/MainLayout\";\nimport Pagination from \"react-js-pagination\";\nimport { ChevronLeft, ChevronRight } from \"@material-ui/icons\";\nimport Select from \"react-select\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { setLoading } from \"../../store/actionCreator\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { Edit, Delete } from \"@material-ui/icons\";\nimport Search from \"../../components/Search\";\nconst FormSchema = Yup.object().shape({\n  password: Yup.string().required(\"* Password tidak boleh kosong\"),\n  ulangi_password: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords don't match!\")\n});\nexport default function User() {\n  const {\n    0: showModal,\n    1: setShowModal\n  } = useState(false);\n  const {\n    0: jabatanDropdown,\n    1: setJabatanDropdown\n  } = useState([]);\n  const {\n    0: selectedJabatan,\n    1: setSelectedJabatan\n  } = useState(0);\n  const {\n    0: dataInstasi,\n    1: setDataInstansi\n  } = useState([]);\n  const {\n    0: selectedInstansi,\n    1: setSelectedInstansi\n  } = useState(0);\n  const accessToken = useSelector(state => state.accessToken);\n  const {\n    0: getNip,\n    1: setNip\n  } = useState(\"\");\n  const {\n    0: getNama,\n    1: setNama\n  } = useState(\"\");\n  const {\n    0: getEmail,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    0: getNohp,\n    1: setNohp\n  } = useState(\"\");\n  const {\n    0: selectedAktif,\n    1: setSelectedAktif\n  } = useState(false);\n  const {\n    0: selectedHakAkses,\n    1: setSelectedHakAkses\n  } = useState(\"\");\n  const dispatch = useDispatch();\n  const {\n    addToast\n  } = useToasts();\n  const {\n    0: dataAllUser,\n    1: setDataAllUser\n  } = useState([]);\n  const {\n    0: haveId,\n    1: setHaveId\n  } = useState();\n  const {\n    0: isEdit,\n    1: setIsEdit\n  } = useState(false); // Pagination\n\n  const takeSize = 10;\n  const {\n    0: total,\n    1: setTotal\n  } = useState(0);\n  const {\n    0: activePage,\n    1: setActivePage\n  } = useState(1);\n  const {\n    0: search,\n    1: setSearch\n  } = useState(\"\");\n  const {\n    0: sort,\n    1: setSort\n  } = useState(\"\");\n  useEffect(() => {\n    if (accessToken != null) {\n      GetInstansi();\n      GetJabatan();\n      GetAllUser();\n    }\n  }, [activePage, search, sort]);\n\n  const GetAllUser = async () => {\n    try {\n      const headers = {\n        Authorization: accessToken\n      };\n      const response = await axiosGeneral.get(\"/resources/pegawai\", {\n        headers,\n        params: {\n          start: (activePage - 1) * takeSize,\n          take_size: takeSize,\n          search,\n          sort\n        }\n      });\n      setDataAllUser([]);\n      const {\n        status,\n        data\n      } = response;\n\n      if (status === 200) {\n        const AllUser = data.data.pegawai;\n        setDataAllUser(AllUser);\n        setTotal(data.data.count_record);\n      } else if (status === 500) {\n        addToast(\"Gagal Mengambil Data User\", {\n          appearance: \"error\"\n        });\n        dispatch(setLoading(false));\n      }\n    } catch (error) {\n      addToast(\"Gagal Mengambil Data User\", {\n        appearance: \"error\"\n      });\n      dispatch(setLoading(false));\n    }\n  };\n\n  const handlePageChange = pageNumber => {\n    setActivePage(pageNumber); // setStart((activePage - 1) * takeSize);\n  };\n\n  const GetInstansi = async () => {\n    try {\n      const headers = {\n        Authorization: accessToken\n      };\n      const response = await axiosGeneral.get(\"/resources/instansi\", {\n        headers\n      });\n      const {\n        status,\n        data\n      } = response;\n\n      if (status === 200) {\n        const intansiArr = [];\n        const instansi = data.data;\n\n        for (const iterator of instansi) {\n          let val = {\n            value: iterator.id,\n            label: iterator.kode_instansi + \" - \" + iterator.nama_instansi\n          };\n          intansiArr.push(val);\n        }\n\n        setDataInstansi(intansiArr);\n        dispatch(setLoading(false));\n      } else if (status === 500) {\n        addToast(\"Gagal Mengambil Data Instansi\", {\n          appearance: \"error\"\n        });\n      }\n    } catch (error) {\n      addToast(error.response.data.message, {\n        appearance: \"error\"\n      });\n      dispatch(setLoading(false));\n    }\n  };\n\n  const GetJabatan = async () => {\n    try {\n      const headers = {\n        Authorization: accessToken\n      };\n      const response = await axiosGeneral.get(\"/resources/jabatan\", {\n        headers\n      });\n      const {\n        data,\n        status\n      } = response;\n\n      if (status === 200) {\n        const jabatanArr = [];\n        const jabatan = data.data;\n\n        for (const iterator of jabatan) {\n          jabatanArr.push(iterator);\n        }\n\n        setJabatanDropdown(jabatanArr);\n      } else if (status === 500) {\n        addToast(\"Gagal Mengambil Data Jabatan\", {\n          appearance: \"error\"\n        });\n      }\n    } catch (error) {\n      addToast(error.response.data.message, {\n        appearance: \"error\"\n      });\n    }\n  };\n\n  const doSave = async values => {\n    try {\n      if (isEdit == false) {\n        const body = {\n          nip: getNip,\n          nama_lengkap: getNama,\n          no_hp: getNohp,\n          id_jabatan: parseInt(selectedJabatan),\n          id_instansi: parseInt(selectedInstansi),\n          email: getEmail,\n          password: formik.values.password,\n          role: selectedHakAkses,\n          active: selectedAktif === \"true\" ? true : false\n        };\n        const headers = {\n          Authorization: accessToken\n        };\n        dispatch(setLoading(true));\n        const response = await axiosGeneral.post(`/resources/pegawai`, body, {\n          headers\n        });\n        const {\n          status,\n          data\n        } = response;\n\n        if (status === 200) {\n          addToast(\"Berhasil tambah user\", {\n            appearance: \"success\"\n          });\n          dispatch(setLoading(false));\n          GetInstansi();\n          GetJabatan();\n          GetAllUser();\n        }\n      } else if (isEdit == true) {\n        const body = {\n          nip: getNip,\n          nama_lengkap: getNama,\n          no_hp: getNohp,\n          id_jabatan: parseInt(selectedJabatan),\n          id_instansi: parseInt(selectedInstansi),\n          email: getEmail,\n          role: selectedHakAkses,\n          active: selectedAktif === \"true\" ? true : false\n        };\n        const headers = {\n          Authorization: accessToken\n        };\n        dispatch(setLoading(true));\n        const response = await axiosGeneral.put(`/resources/pegawai/${haveId}`, body, {\n          headers\n        });\n        const {\n          status,\n          data\n        } = response;\n\n        if (status === 200) {\n          addToast(\"Berhasil edit user\", {\n            appearance: \"success\"\n          });\n          GetUserById(haveId);\n          dispatch(setLoading(false));\n          GetInstansi();\n          GetJabatan();\n          GetAllUser();\n        }\n      }\n    } catch (error) {\n      dispatch(setLoading(false));\n      addToast(\"Gagal eksekusi\", {\n        appearance: \"error\"\n      });\n    }\n  };\n\n  const DoNull = () => {\n    setNip();\n    setNama();\n    setNohp();\n    setSelectedJabatan();\n    setSelectedInstansi();\n    setEmail();\n    setSelectedHakAkses();\n    setSelectedAktif();\n  };\n\n  const doModalEdit = async id => {\n    try {\n      DoNull();\n      GetUserById(id);\n      setHaveId(id);\n      setShowModal(true);\n    } catch (error) {\n      addToast(\"Gagal tambah user\", {\n        appearance: \"error\"\n      });\n    }\n  };\n\n  const GetUserById = async id => {\n    try {\n      const headers = {\n        Authorization: accessToken\n      };\n      dispatch(setLoading(true));\n      const response = await axiosGeneral.get(`/resources/pegawai/${id}`, {\n        headers\n      });\n      const {\n        status,\n        data\n      } = response;\n\n      if (status === 200) {\n        setNip(data.data.nip);\n        setNama(data.data.nama_lengkap);\n        setNohp(data.data.no_hp);\n        setSelectedJabatan(data.data.jabatan.id);\n        setSelectedInstansi(data.data.instansi.id);\n        setEmail(data.data.account_detail.email);\n        setSelectedHakAkses(data.data.account_detail.role);\n        setSelectedAktif(data.data.account_detail.active);\n        dispatch(setLoading(false));\n      } else if (status === 500) {\n        addToast(\"Gagal Mengambil Data User\", {\n          appearance: \"error\"\n        });\n        dispatch(setLoading(false));\n      }\n    } catch (error) {\n      addToast(\"Gagal Mengambil Data User\", {\n        appearance: \"error\"\n      });\n      dispatch(setLoading(false));\n    }\n  };\n\n  const doDelete = async id => {\n    try {\n      const headers = {\n        Authorization: accessToken\n      };\n      dispatch(setLoading(true));\n      const response = await axiosGeneral.delete(`/resources/pegawai/${id}`, {\n        headers\n      });\n      const {\n        status,\n        data\n      } = response;\n\n      if (status === 200) {\n        addToast(\"Berhasil hapus user\", {\n          appearance: \"success\"\n        });\n        dispatch(setLoading(false));\n        GetInstansi();\n        GetJabatan();\n        GetAllUser();\n      } else {\n        addToast(\"Gagal hapus user\", {\n          appearance: \"warning\"\n        });\n        dispatch(setLoading(false));\n      }\n    } catch (error) {\n      addToast(\"Gagal hapus user\", {\n        appearance: \"error\"\n      });\n      dispatch(setLoading(false));\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      password: \"\",\n      ulangi_password: \"\"\n    },\n    validationSchema: FormSchema,\n    enableReinitialize: true\n  });\n  return /*#__PURE__*/_jsx(MainLayout, {\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: \"pt-10 px-8\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"flex flex-row justify-between items-center pb-14 w-full\",\n        children: [/*#__PURE__*/_jsx(MenuTitle, {\n          children: \"Users\"\n        }), /*#__PURE__*/_jsx(ButtonAdd, {\n          className: \"button\",\n          onClick: () => {\n            setShowModal(true);\n            setIsEdit(false);\n            DoNull();\n          },\n          children: \"Tambah User\"\n        })]\n      }), /*#__PURE__*/_jsx(Search, {\n        placeholder: \"Cari NIP, nama pegawai, email...\",\n        onChange: e => {\n          setSearch(e.target.value);\n          setActivePage(1);\n        },\n        sortingArray: [{\n          label: \"Status Aktif\",\n          value: \"active\"\n        }, {\n          label: \"Status Non Aktif\",\n          value: \"non_active\"\n        }, {\n          label: \"Instansi Tertinggi\",\n          value: \"instansi_tertinggi\"\n        }, {\n          label: \"Instansi Terendah\",\n          value: \"instansi_terendah\"\n        }, {\n          label: \"Jabatan Tertinggi\",\n          value: \"jabatan_tertinggi\"\n        }, {\n          label: \"Jabatan Terendah\",\n          value: \"jabatan_terendah\"\n        }],\n        onClickSort: val => setSort(val)\n      }), /*#__PURE__*/_jsxs(Card, {\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"grid grid-cols-12 gap-4 border-b-2 my-2 items-center py-2\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"text-sm font-bold text-center\",\n            children: \"#\"\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"text-sm font-bold col-span-2 text-left break-all\",\n            children: \"NIP - Nama\"\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"text-sm font-bold col-span-3 text-left break-all\",\n            children: \"Jabatan - Instansi\"\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"text-sm font-bold col-span-3 text-left break-all\",\n            children: \"Email\"\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"text-sm font-bold text-left break-all\",\n            children: \"Hak Akses\"\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"text-sm font-bold text-left break-all\",\n            children: \"Status\"\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"text-sm font-bold text-left break-all\",\n            children: \"Action\"\n          })]\n        }), dataAllUser.map((value, index) => /*#__PURE__*/_jsxs(\"div\", {\n          className: \"grid grid-cols-12 gap-4 border-b items-center py-2\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"text-sm text-center justify-center\",\n            children: index + 1\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"text-sm col-span-2 break-words break-all text-left\",\n            children: [value.nip, \" \", /*#__PURE__*/_jsx(\"br\", {}), \"-\", /*#__PURE__*/_jsx(\"br\", {}), \" \", value.nama_lengkap]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"text-sm col-span-3 whitespace-normal text-left\",\n            children: [value.jabatan.nama_jabatan, \" \", /*#__PURE__*/_jsx(\"br\", {}), \"-\", /*#__PURE__*/_jsx(\"br\", {}), \" \", value.instansi.nama_instansi]\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"text-sm col-span-3 break-words break-all text-left\",\n            children: value.account_detail.email + \" \"\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"text-xs text-left break-all \",\n            children: value.account_detail.role\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"text-sm text-left\",\n            children: value.account_detail.active === true ? \"aktif\" : \"Non Aktif\"\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"text-sm text-left\",\n            children: [/*#__PURE__*/_jsx(Tooltip, {\n              onClick: () => {\n                setIsEdit(true);\n                doModalEdit(value.id);\n              },\n              title: \"Edit\",\n              children: /*#__PURE__*/_jsx(Edit, {\n                className: \"cursor-pointer mr-2\",\n                size: \"24px\"\n              })\n            }), /*#__PURE__*/_jsx(Tooltip, {\n              onClick: () => doDelete(value.id),\n              title: \"Hapus\",\n              children: /*#__PURE__*/_jsx(Delete, {\n                className: \"cursor-pointer ml-2\",\n                size: \"24px\"\n              })\n            })]\n          })]\n        }, index)), /*#__PURE__*/_jsx(\"div\", {\n          className: \"w-full mt-8 flex flex-row justify-center items-center\",\n          children: /*#__PURE__*/_jsx(Pagination, {\n            activePage: activePage,\n            itemsCountPerPage: takeSize,\n            totalItemsCount: total,\n            pageRangeDisplayed: 5,\n            onChange: handlePageChange,\n            itemClass: \"bg-blue-100 py-2 px-4 mx-1 rounded font-bold\",\n            linkClass: \"text-gray-700 hover:no-underline hover:text-gray-700\",\n            hideFirstLastPages: true,\n            prevPageText: /*#__PURE__*/_jsx(ChevronLeft, {}),\n            nextPageText: /*#__PURE__*/_jsx(ChevronRight, {}),\n            activeClass: \"bg-blue-400\",\n            activeLinkClass: \"text-white\"\n          })\n        })]\n      }), /*#__PURE__*/_jsxs(Modal, {\n        modalSize: \"lg\",\n        modalTitle: isEdit == true ? \"Detail User\" : \"Tambah User\",\n        show: showModal,\n        onClickBackdrop: () => {\n          setShowModal(!showModal);\n          setIsEdit(false);\n        },\n        children: [/*#__PURE__*/_jsx(Input, {\n          labelText: \"Nip\",\n          valueData: getNip,\n          onChange: e => setNip(e.target.value)\n        }), /*#__PURE__*/_jsx(Input, {\n          labelText: \"Nama\",\n          valueData: getNama,\n          onChange: e => setNama(e.target.value)\n        }), /*#__PURE__*/_jsx(Input, {\n          labelText: \"Email\",\n          type: \"email\",\n          valueData: getEmail,\n          onChange: e => setEmail(e.target.value)\n        }), /*#__PURE__*/_jsx(Input, {\n          labelText: \"No Handphone\",\n          valueData: getNohp,\n          onChange: e => setNohp(e.target.value)\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"grid grid-cols-2 gap-4 mt-2\",\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: \"my-2\",\n            children: [/*#__PURE__*/_jsx(\"label\", {\n              className: \"font-bold text-black text-sm\",\n              children: \"Jabatan\"\n            }), /*#__PURE__*/_jsxs(\"select\", {\n              onChange: e => setSelectedJabatan(parseInt(e.target.value) || 0),\n              name: \"jabatan\",\n              placeholder: \"jabatan\",\n              value: selectedJabatan,\n              className: \"w-full bg-gray-200 rounded-xl py-2 px-2 font-nunito focus:outline-none text-sm md:text-base\",\n              children: [/*#__PURE__*/_jsx(\"option\", {\n                value: \"0\",\n                disabled: true,\n                children: \"Pilih Jabatan\"\n              }), jabatanDropdown.map((item, index) => /*#__PURE__*/_jsx(\"option\", {\n                value: item.id,\n                children: item.nama_jabatan\n              }, index))]\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"my-2 block\",\n            children: [/*#__PURE__*/_jsx(\"label\", {\n              className: \"font-bold text-black text-sm\",\n              children: \"Detail Instansi\"\n            }), /*#__PURE__*/_jsx(Select, {\n              placeholder: \"Pilih detail instansi\",\n              value: dataInstasi.find(op => op.value === selectedInstansi),\n              onChange: e => setSelectedInstansi(e.value),\n              options: dataInstasi\n            })]\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"grid grid-cols-2 gap-4 mt-2\",\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: \"my-2\",\n            children: [/*#__PURE__*/_jsx(\"label\", {\n              className: \"font-bold text-black text-sm\",\n              children: \"Hak Akses\"\n            }), /*#__PURE__*/_jsxs(\"select\", {\n              value: selectedHakAkses,\n              onChange: e => setSelectedHakAkses(e.target.value),\n              id: \"direktorat\",\n              name: \"direktorat\",\n              className: \"w-full bg-gray-200 rounded-xl py-2 px-4 font-nunito focus:outline-none\",\n              children: [/*#__PURE__*/_jsx(\"option\", {\n                value: \"\",\n                children: \"Pilih Hak Akses\"\n              }), /*#__PURE__*/_jsx(\"option\", {\n                value: \"respondent\",\n                children: \"Respondent\"\n              }), /*#__PURE__*/_jsx(\"option\", {\n                value: \"superadmin\",\n                children: \"Superadmin\"\n              }), /*#__PURE__*/_jsx(\"option\", {\n                value: \"admin\",\n                children: \"Admin\"\n              })]\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"my-2\",\n            children: [/*#__PURE__*/_jsx(\"label\", {\n              className: \"font-bold text-black text-sm\",\n              children: \"User Status\"\n            }), /*#__PURE__*/_jsxs(\"select\", {\n              onChange: e => setSelectedAktif(e.target.value),\n              id: \"direktorat\",\n              name: \"direktorat\",\n              value: selectedAktif,\n              className: \"w-full bg-gray-200 rounded-xl py-2 px-4 font-nunito focus:outline-none\",\n              children: [/*#__PURE__*/_jsx(\"option\", {\n                value: \"\",\n                children: \"Pilih status uer\"\n              }), /*#__PURE__*/_jsx(\"option\", {\n                value: true,\n                children: \"Aktif\"\n              }), /*#__PURE__*/_jsx(\"option\", {\n                value: false,\n                children: \"Non-Aktif\"\n              })]\n            })]\n          })]\n        }), /*#__PURE__*/_jsx(\"form\", {\n          onSubmit: formik.handleSubmit,\n          children: isEdit == false && /*#__PURE__*/_jsxs(_Fragment, {\n            children: [/*#__PURE__*/_jsx(Input, {\n              labelText: \"Password\",\n              classes: \"my-2\",\n              placeholder: \"Password\",\n              type: \"password\",\n              name: \"password\",\n              onChange: formik.handleChange,\n              valueData: formik.values.password\n            }), formik.errors.password && /*#__PURE__*/_jsx(\"span\", {\n              className: \"text-xs text-red-500\",\n              children: formik.errors.password\n            }), /*#__PURE__*/_jsx(Input, {\n              labelText: \"Ulangi Password\",\n              classes: \"my-2\",\n              placeholder: \"Ulangi Password\",\n              type: \"password\",\n              name: \"ulangi_password\",\n              onChange: formik.handleChange,\n              valueData: formik.values.ulangi_password\n            }), formik.errors.ulangi_password && /*#__PURE__*/_jsx(\"span\", {\n              className: \"text-xs text-red-500\",\n              children: formik.errors.ulangi_password\n            })]\n          })\n        }), /*#__PURE__*/_jsx(Button, {\n          onClick: doSave,\n          buttonText: \"Simpan\",\n          buttonColor: \"#4361EE\",\n          buttonTextColor: \"#FFF\",\n          fontSize: 14,\n          className: \"mt-4\",\n          type: \"submit\"\n        })]\n      })]\n    })\n  });\n}\nconst Wrapper = styled.div`\n  padding: 23px 54px 0px 54px;\n`;\nconst MenuTitle = styled.h1`\n  font-size: 48px;\n  font-weight: bold;\n  color: #000;\n`;\nconst ButtonAdd = styled.div`\n  font-size: 14px;\n  background: #4361ee;\n  color: #fff;\n  padding: 10px 23px;\n  border-radius: 10px;\n  font-weight: 700;\n  cursor: pointer;\n`;\nconst Card = styled.div`\n  background: #fff;\n  border-radius: 10px;\n  box-shadow: 2px 2px 7px rgba(0, 0, 0, 0.25);\n  padding: 30px 46px 30px 46px;\n`;","map":null,"metadata":{},"sourceType":"module"}