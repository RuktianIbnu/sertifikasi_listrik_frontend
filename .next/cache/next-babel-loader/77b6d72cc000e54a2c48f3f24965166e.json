{"ast":null,"code":"import _regeneratorRuntime from \"C:/project/sertifikasi_listrik_frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/project/sertifikasi_listrik_frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:/project/sertifikasi_listrik_frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\project\\\\sertifikasi_listrik_frontend\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport Head from \"next/head\";\nimport Router from \"next/router\";\nimport { Container, Row, Col, Form, Button, Image } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState, useEffect } from \"react\";\nimport { axiosGeneral } from \"../helpers/global\";\nimport { setAccessToken, setUser, setLoading } from \"../store/actionCreator\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { useToasts } from \"react-toast-notifications\";\nvar FormSchema = Yup.object().shape({\n  password: Yup.string().required(\"* Password tidak boleh kosong\")\n});\nvar FormSchemaPassword = Yup.object().shape(_defineProperty({\n  password: Yup.string().required(\"* Password tidak boleh kosong\"),\n  ulangi_password: Yup.string().required(\"*Ulangi Password tidak boleh kosong\")\n}, \"ulangi_password\", Yup.string().oneOf([Yup.ref(\"password\"), null], \"Password tidak sama!\")));\nexport default function Home() {\n  _s();\n\n  var dispatch = useDispatch();\n  var accessToken = useSelector(function (state) {\n    return state.accessToken;\n  });\n\n  var _useToasts = useToasts(),\n      addToast = _useToasts.addToast;\n\n  useEffect(function () {\n    if (accessToken) {\n      Router.replace(\"/dashboard\");\n    }\n\n    var url = new URLSearchParams(location.search);\n\n    if (url.get(\"token\") != null) {\n      setTokenVerify(url.get(\"token\").toString());\n      setIsNewPassword(true);\n    }\n  }, []);\n\n  var doLogin = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var body, response, status, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              dispatch(setLoading(true));\n              body = {\n                email: values.email,\n                password: values.password,\n                app_id: \"admin-panel\"\n              };\n              _context.next = 5;\n              return axiosGeneral.post(\"/login\", body);\n\n            case 5:\n              response = _context.sent;\n              status = response.status, data = response.data; // console.log(data);\n\n              if (status === 200) {\n                setTokenTemp(data.data.temp_token);\n                dispatch(setLoading(false));\n                setIsOtp(true);\n                setOTP(\"\");\n              }\n\n              _context.next = 14;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              dispatch(setLoading(false));\n              addToast(_context.t0.response.data.message, {\n                appearance: \"error\"\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n\n    return function doLogin(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema: FormSchema,\n    onSubmit: function onSubmit(values) {\n      return doLogin(values);\n    }\n  });\n  var formikPassword = useFormik({\n    initialValues: {\n      password: \"\",\n      ulangi_password: \"\"\n    },\n    validationSchema: FormSchemaPassword,\n    enableReinitialize: false,\n    onSubmit: function onSubmit(values) {\n      return doChangePassword(values);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mt-52\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 bg-blue-300 my-10 \",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-center text-green-600 my-4\",\n              children: \"LISTRIK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"my-10\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  \"for\": \"exampleInputEmail1\",\n                  children: \"Username \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"input\",\n                  className: \"form-control\",\n                  placeholder: \"Username\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  \"for\": \"exampleInputPassword1\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control\",\n                  placeholder: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                disabled: formik.isSubmitting,\n                variant: \"warning\",\n                type: \"submit\",\n                className: \"mt-4\",\n                block: true,\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n} // return (\n// <>\n//   <Head>\n//     <title>Login - LISTRIK</title>\n//   </Head>\n//   <Container className=\"bg-green-500 justify-content-md-center mt-28 \">\n//     <Row>\n//         <h1>Listrik</h1>\n//         <h3 className=\"font-semibold\">Masuk</h3>\n//         <form onSubmit={formik.handleSubmit} method=\"POST\">\n//           <div className=\"mt-5\">\n//             <Form.Label>Username</Form.Label>\n//             <Form.Control\n//               className=\"custom-input\"\n//               type=\"text\"\n//               autoComplete=\"false\"\n//               name=\"email\"\n//               onChange={formik.handleChange}\n//               value={formik.values.email}\n//             />\n//             {formik.errors.email && (\n//               <span className=\"text-xs text-red-500\">\n//                 {formik.errors.email}\n//               </span>\n//             )}\n//           </div>\n//           <div>\n//             <Form.Label htmlFor=\"password\">Password</Form.Label>\n//             <Form.Control\n//               className=\"custom-input\"\n//               type=\"password\"\n//               autoComplete=\"true\"\n//               name=\"password\"\n//               onChange={formik.handleChange}\n//               value={formik.values.password}\n//             />\n//             {formik.errors.password && (\n//               <span className=\"text-xs text-red-500\">\n//                 {formik.errors.password}\n//               </span>\n//             )}\n//           </div>\n//           <Button\n//             disabled={formik.isSubmitting}\n//             variant=\"warning\"\n//             type=\"submit\"\n//             className=\"mt-4\"\n//             block\n//           >\n//             Login\n//           </Button>\n//         </form>\n//     </Row>\n//   </Container>\n//   <style>{`\n//     .imigrasi-logo {\n//       width:90%;\n//       height: 50vh;\n//       object-fit: contain;\n//       margin-top:20vh;\n//       margin-left: auto;\n//       margin-right: auto;\n//       display:block;\n//     }\n//     .col-right {\n//       background: #03045E;\n//       height: 100vh;\n//     }\n//     .col-left {\n//       background: #0e979c;\n//       height: 100vh;\n//       max-height: 100vh;\n//       padding-left: 36px;\n//       padding-right: 36px;\n//     }\n//     h1 {\n//       font-family: \"Poppins\", sans-serif;\n//       font-weight: bold;\n//       font-size: 3.75rem;\n//       color: #0e979c;\n//       text-align:center;\n//       margin-bottom: 75px;\n//     }\n//     h3 {\n//       font-weight: 600;\n//     }\n//     .inline-icon {\n//       position: absolute;\n//       bottom: .45rem;\n//       right: .45rem;\n//       font-size: 24px;\n//       cursor:pointer;\n//     }\n//     .btn-warning {\n//       color: #2B2D42 !important;\n//       font-weight: bold !important;\n//       border-radius: 10px;\n//       text-transform: uppercase;\n//       height:40px;\n//       font-size: 14px;\n//     }\n//     .custom-input {\n//       background: #f5f5f5;\n//       border: 1px solid #a8dadc !important;\n//       border-radius: 10px !important;\n//       font-size: 14px !important;\n//       color: #445455 !important;\n//       height:40px;\n//       padding-left:17px;\n//     }\n//     .custom-input:focus {\n//       background: #f5f5f5;\n//     }\n//   `}</style>\n// </>\n// );\n// }\n\n_s(Home, \"UlDhoHekacvA2bAkIZILmiAdjeI=\", false, function () {\n  return [useDispatch, useSelector, useToasts, useFormik, useFormik];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/project/sertifikasi_listrik_frontend/pages/index.js"],"names":["Head","Router","Container","Row","Col","Form","Button","Image","useSelector","useDispatch","useState","useEffect","axiosGeneral","setAccessToken","setUser","setLoading","Yup","useFormik","useToasts","FormSchema","object","shape","password","string","required","FormSchemaPassword","ulangi_password","oneOf","ref","Home","dispatch","accessToken","state","addToast","replace","url","URLSearchParams","location","search","get","setTokenVerify","toString","setIsNewPassword","doLogin","values","body","email","app_id","post","response","status","data","setTokenTemp","temp_token","setIsOtp","setOTP","message","appearance","formik","initialValues","validationSchema","onSubmit","formikPassword","enableReinitialize","doChangePassword","isSubmitting"],"mappings":"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AAA,QAAQ,EAAEc,MAAM,CAACO,YADnB;AAEE,gBAAA,OAAO,EAAC,SAFV;AAGE,gBAAA,IAAI,EAAC,QAHP;AAIE,gBAAA,SAAS,EAAC,MAJZ;AAKE,gBAAA,KAAK,MALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAyCD,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GAzNwBpC,I;UACLpB,W,EACGD,W,EACCU,S,EAqCND,S,EASQA,S;;;KAjDDY,I","sourcesContent":["import Head from \"next/head\";\r\nimport Router from \"next/router\";\r\nimport { Container, Row, Col, Form, Button, Image } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { axiosGeneral } from \"../helpers/global\";\r\nimport { setAccessToken, setUser, setLoading } from \"../store/actionCreator\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nconst FormSchema = Yup.object().shape({\r\n  password: Yup.string().required(\"* Password tidak boleh kosong\"),\r\n});\r\n\r\nconst FormSchemaPassword = Yup.object().shape({\r\n  password: Yup.string().required(\"* Password tidak boleh kosong\"),\r\n  ulangi_password: Yup.string().required(\"*Ulangi Password tidak boleh kosong\"),\r\n  ulangi_password: Yup.string().oneOf(\r\n    [Yup.ref(\"password\"), null],\r\n    \"Password tidak sama!\"\r\n  ),\r\n});\r\n\r\nexport default function Home() {\r\n  const dispatch = useDispatch();\r\n  const accessToken = useSelector((state) => state.accessToken);\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    if (accessToken) {\r\n      Router.replace(\"/dashboard\");\r\n    }\r\n\r\n    const url = new URLSearchParams(location.search);\r\n    if (url.get(\"token\") != null) {\r\n      setTokenVerify(url.get(\"token\").toString());\r\n      setIsNewPassword(true);\r\n    }\r\n  }, []);\r\n\r\n  const doLogin = async (values) => {\r\n    try {\r\n      dispatch(setLoading(true));\r\n      const body = {\r\n        email: values.email,\r\n        password: values.password,\r\n        app_id: \"admin-panel\",\r\n      };\r\n      const response = await axiosGeneral.post(\"/login\", body);\r\n      const { status, data } = response;\r\n      // console.log(data);\r\n      if (status === 200) {\r\n        setTokenTemp(data.data.temp_token);\r\n        dispatch(setLoading(false));\r\n        setIsOtp(true);\r\n        setOTP(\"\");\r\n      }\r\n    } catch (error) {\r\n      dispatch(setLoading(false));\r\n      addToast(error.response.data.message, { appearance: \"error\" });\r\n    }\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: FormSchema,\r\n    onSubmit: (values) => doLogin(values),\r\n  });\r\n\r\n  const formikPassword = useFormik({\r\n    initialValues: {\r\n      password: \"\",\r\n      ulangi_password: \"\",\r\n    },\r\n    validationSchema: FormSchemaPassword,\r\n    enableReinitialize: false,\r\n    onSubmit: (values) => doChangePassword(values),\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"container mt-52\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-md-6 bg-blue-300 my-10 \">\r\n              <h1 className=\"text-center text-green-600 my-4\">LISTRIK</h1>\r\n              <form className=\"my-10\">\r\n                <div className=\"form-group\">\r\n                  <label for=\"exampleInputEmail1\">Username </label>\r\n                  <input\r\n                    type=\"input\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Username\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label for=\"exampleInputPassword1\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Password\"\r\n                  />\r\n                </div>\r\n                <Button\r\n                  disabled={formik.isSubmitting}\r\n                  variant=\"warning\"\r\n                  type=\"submit\"\r\n                  className=\"mt-4\"\r\n                  block\r\n                >\r\n                  Login\r\n                </Button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n// return (\r\n// <>\r\n//   <Head>\r\n//     <title>Login - LISTRIK</title>\r\n//   </Head>\r\n//   <Container className=\"bg-green-500 justify-content-md-center mt-28 \">\r\n//     <Row>\r\n//         <h1>Listrik</h1>\r\n//         <h3 className=\"font-semibold\">Masuk</h3>\r\n//         <form onSubmit={formik.handleSubmit} method=\"POST\">\r\n//           <div className=\"mt-5\">\r\n//             <Form.Label>Username</Form.Label>\r\n//             <Form.Control\r\n//               className=\"custom-input\"\r\n//               type=\"text\"\r\n//               autoComplete=\"false\"\r\n//               name=\"email\"\r\n//               onChange={formik.handleChange}\r\n//               value={formik.values.email}\r\n//             />\r\n//             {formik.errors.email && (\r\n//               <span className=\"text-xs text-red-500\">\r\n//                 {formik.errors.email}\r\n//               </span>\r\n//             )}\r\n//           </div>\r\n//           <div>\r\n//             <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n//             <Form.Control\r\n//               className=\"custom-input\"\r\n//               type=\"password\"\r\n//               autoComplete=\"true\"\r\n//               name=\"password\"\r\n//               onChange={formik.handleChange}\r\n//               value={formik.values.password}\r\n//             />\r\n//             {formik.errors.password && (\r\n//               <span className=\"text-xs text-red-500\">\r\n//                 {formik.errors.password}\r\n//               </span>\r\n//             )}\r\n//           </div>\r\n//           <Button\r\n//             disabled={formik.isSubmitting}\r\n//             variant=\"warning\"\r\n//             type=\"submit\"\r\n//             className=\"mt-4\"\r\n//             block\r\n//           >\r\n//             Login\r\n//           </Button>\r\n//         </form>\r\n//     </Row>\r\n//   </Container>\r\n//   <style>{`\r\n//     .imigrasi-logo {\r\n//       width:90%;\r\n//       height: 50vh;\r\n//       object-fit: contain;\r\n//       margin-top:20vh;\r\n//       margin-left: auto;\r\n//       margin-right: auto;\r\n//       display:block;\r\n//     }\r\n//     .col-right {\r\n//       background: #03045E;\r\n//       height: 100vh;\r\n//     }\r\n//     .col-left {\r\n//       background: #0e979c;\r\n//       height: 100vh;\r\n//       max-height: 100vh;\r\n//       padding-left: 36px;\r\n//       padding-right: 36px;\r\n//     }\r\n//     h1 {\r\n//       font-family: \"Poppins\", sans-serif;\r\n//       font-weight: bold;\r\n//       font-size: 3.75rem;\r\n//       color: #0e979c;\r\n//       text-align:center;\r\n//       margin-bottom: 75px;\r\n//     }\r\n//     h3 {\r\n//       font-weight: 600;\r\n//     }\r\n//     .inline-icon {\r\n//       position: absolute;\r\n//       bottom: .45rem;\r\n//       right: .45rem;\r\n//       font-size: 24px;\r\n//       cursor:pointer;\r\n//     }\r\n//     .btn-warning {\r\n//       color: #2B2D42 !important;\r\n//       font-weight: bold !important;\r\n//       border-radius: 10px;\r\n//       text-transform: uppercase;\r\n//       height:40px;\r\n//       font-size: 14px;\r\n//     }\r\n//     .custom-input {\r\n//       background: #f5f5f5;\r\n//       border: 1px solid #a8dadc !important;\r\n//       border-radius: 10px !important;\r\n//       font-size: 14px !important;\r\n//       color: #445455 !important;\r\n//       height:40px;\r\n//       padding-left:17px;\r\n//     }\r\n//     .custom-input:focus {\r\n//       background: #f5f5f5;\r\n//     }\r\n//   `}</style>\r\n// </>\r\n// );\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}