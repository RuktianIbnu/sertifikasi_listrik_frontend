{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Modal from \"../../components/Modal\";\nimport Input from \"../../components/Input\";\nimport TextArea from \"../../components/TextArea\";\nimport Button from \"../../components/Button\";\nimport { axiosGeneral } from \"../../helpers/global\";\nimport Select from \"react-select\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setLoading } from \"../../store/actionCreator\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { Edit, Delete } from \"@material-ui/icons\";\nimport Pagination from \"react-js-pagination\";\nimport { ChevronLeft, ChevronRight } from \"@material-ui/icons\";\nimport Search from \"../../components/Search\";\nconst FormSchema = Yup.object().shape({\n  kodeInstansi: Yup.string().required(\"* Kode Instansi tidak boleh kosong\"),\n  namaInstansi: Yup.string().required(\"* Nama Instansi tidak boleh kosong\")\n});\nexport default function Direktorat() {\n  const {\n    0: showModal,\n    1: setShowModal\n  } = useState(false);\n  const {\n    0: dataInstasi,\n    1: setDataInstansi\n  } = useState([]);\n  const {\n    0: selectedInstansi,\n    1: setSelectedInstansi\n  } = useState(0);\n  const dispatch = useDispatch();\n  const {\n    addToast\n  } = useToasts();\n  const accessToken = useSelector(state => state.accessToken);\n  const {\n    0: dataInstasiAll,\n    1: setDataInstansiAll\n  } = useState([]);\n  const {\n    0: haveId,\n    1: setHaveId\n  } = useState();\n  const {\n    0: isEdit,\n    1: setIsEdit\n  } = useState(false);\n  const {\n    0: getKodeInstansi,\n    1: setKodeInstansi\n  } = useState(\"\");\n  const {\n    0: getNamaInstansi,\n    1: setNamaInstansi\n  } = useState(\"\");\n  useEffect(() => {\n    if (accessToken != null) {\n      GetInstansiAll();\n    }\n  }, []);\n\n  const GetInstansiById = async id => {\n    try {\n      const headers = {\n        Authorization: accessToken\n      };\n      dispatch(setLoading(true));\n      const response = await axiosGeneral.get(`/resources/instansi/${id}`, {\n        headers\n      });\n      const {\n        status,\n        data\n      } = response;\n\n      if (status === 200) {\n        setKodeInstansi(data.data.kode_instansi);\n        setNamaInstansi(data.data.nama_instansi);\n        setSelectedInstansi(data.data.parent_id);\n        dispatch(setLoading(false));\n      } else if (status === 500) {\n        addToast(\"Gagal Mengambil Data instansi\", {\n          appearance: \"error\"\n        });\n        dispatch(setLoading(false));\n      }\n    } catch (error) {\n      addToast(\"Gagal Mengambil Data instansi\", {\n        appearance: \"error\"\n      });\n      dispatch(setLoading(false));\n    }\n  };\n\n  const doSave = async values => {\n    try {\n      if (isEdit == true) {\n        const body = {\n          kode_instansi: formik.values.kodeInstansi,\n          nama_instansi: formik.values.namaInstansi,\n          parent_id: selectedInstansi\n        };\n        const headers = {\n          Authorization: accessToken\n        };\n        console.log(body);\n        dispatch(setLoading(true));\n        const response = await axiosGeneral.put(`/resources/instansi/${haveId}`, body, {\n          headers\n        });\n        const {\n          status,\n          data\n        } = response;\n\n        if (status === 200) {\n          addToast(\"Berhasil ubah Instansi\", {\n            appearance: \"success\"\n          });\n          dispatch(setLoading(false));\n          DoNull();\n          setShowModal(false);\n          GetInstansiAll();\n        }\n      } else if (isEdit == false) {\n        const body = {\n          kode_instansi: formik.values.kodeInstansi,\n          nama_instansi: formik.values.namaInstansi,\n          parent_id: selectedInstansi\n        };\n        const headers = {\n          Authorization: accessToken\n        };\n        dispatch(setLoading(true));\n        const response = await axiosGeneral.post(`/resources/instansi`, body, {\n          headers\n        });\n        const {\n          status,\n          data\n        } = response;\n\n        if (status === 200) {\n          addToast(\"Berhasil tambah Instansi\", {\n            appearance: \"success\"\n          });\n          DoNull();\n          dispatch(setLoading(false));\n          setShowModal(false);\n          GetInstansiAll();\n        }\n      }\n\n      console.log(\"kode : \" + getKodeInstansi, \"nama : \" + getNamaInstansi);\n    } catch (error) {\n      dispatch(setLoading(false));\n      addToast(\"Gagal eksekusi\", {\n        appearance: \"error\"\n      });\n    }\n  };\n\n  const GetInstansiAll = async () => {\n    try {\n      const headers = {\n        Authorization: accessToken\n      };\n      const response = await axiosGeneral.get(\"/resources/instansi\", {\n        headers\n      });\n      const {\n        status,\n        data\n      } = response;\n\n      if (status === 200) {\n        const intansiArr = [];\n        const instansi = data.data;\n\n        for (const iterator of instansi) {\n          let val = {\n            value: iterator.id,\n            label: iterator.kode_instansi + \" - \" + iterator.nama_instansi\n          };\n          intansiArr.push(val);\n        }\n\n        setDataInstansi(intansiArr);\n        setDataInstansiAll(data.data);\n        dispatch(setLoading(false));\n      } else if (status === 500) {\n        addToast(\"Gagal Mengambil Data Instansi\", {\n          appearance: \"error\"\n        });\n      }\n    } catch (error) {\n      addToast(error.response.data.message, {\n        appearance: \"error\"\n      });\n      dispatch(setLoading(false));\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      kodeInstansi: getKodeInstansi,\n      namaInstansi: getNamaInstansi\n    },\n    validationSchema: FormSchema,\n    enableReinitialize: true\n  });\n\n  const DoNull = () => {\n    setKodeInstansi(\"\"), setNamaInstansi(\"\"), setSelectedInstansi(0);\n  };\n\n  const doModalEdit = async id => {\n    try {\n      DoNull();\n      GetInstansiById(id);\n      setHaveId(id);\n      setShowModal(true);\n    } catch (error) {\n      addToast(\"Gagal tambah instansi\", {\n        appearance: \"error\"\n      });\n    }\n  };\n\n  const doDelete = async id => {\n    try {\n      const headers = {\n        Authorization: accessToken\n      };\n      dispatch(setLoading(true));\n      const response = await axiosGeneral.delete(`/resources/instansi/` + id, {\n        headers\n      });\n      const {\n        status,\n        data\n      } = response;\n\n      if (status === 200) {\n        addToast(\"Berhasil hapus instansi\", {\n          appearance: \"success\"\n        });\n        dispatch(setLoading(false));\n        GetInstansiAll();\n      } else {\n        addToast(\"Gagal hapus instansi\", {\n          appearance: \"warning\"\n        });\n        dispatch(setLoading(false));\n      }\n    } catch (error) {\n      addToast(\"Gagal hapus instansi\", {\n        appearance: \"error\"\n      });\n      dispatch(setLoading(false));\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(Wrapper, {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: \"flex flex-row justify-between items-center pb-24\",\n      children: [/*#__PURE__*/_jsx(MenuTitle, {\n        children: \"Master Instansi\"\n      }), /*#__PURE__*/_jsx(ButtonAdd, {\n        className: \"button\",\n        onClick: () => {\n          DoNull();\n          setShowModal(true);\n          setIsEdit(false);\n        },\n        children: \"Tambah Instansi\"\n      })]\n    }), /*#__PURE__*/_jsx(Search, {}), /*#__PURE__*/_jsxs(Card, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"grid grid-cols-12 gap-4 border-b-2 my-2 items-center py-2\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"text-sm font-bold text-center\",\n          children: \"#\"\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"text-sm font-bold col-span-4 text-left break-all\",\n          children: \"Induk Instansi\"\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"text-sm font-bold col-span-2 text-left break-all\",\n          children: \"Kode Instansi\"\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"text-sm font-bold col-span-4 text-left break-all\",\n          children: \"Nama Instansi\"\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"text-sm font-bold text-left break-all\",\n          children: \"Action\"\n        })]\n      }), dataInstasiAll.map((value, index) => /*#__PURE__*/_jsxs(\"div\", {\n        className: \"grid grid-cols-12 gap-4 border-b items-center py-2\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"text-sm text-center justify-center\",\n          children: index + 1\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"text-sm col-span-4 break-words text-left\",\n          children: value.parent_instansi\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"text-sm col-span-2 whitespace-normal text-left\",\n          children: value.kode_instansi\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"text-sm col-span-4 break-words text-left\",\n          children: value.nama_instansi\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"text-sm text-left\",\n          children: [/*#__PURE__*/_jsx(Tooltip, {\n            onClick: () => {\n              setIsEdit(true);\n              doModalEdit(value.id);\n            },\n            title: \"Edit\",\n            children: /*#__PURE__*/_jsx(Edit, {\n              className: \"cursor-pointer mr-2\",\n              size: \"24px\"\n            })\n          }), /*#__PURE__*/_jsx(Tooltip, {\n            onClick: () => {\n              if (window.confirm(`Yakin hapus ` + value.nama_instansi + ` ?`)) {\n                doDelete(value.id);\n              }\n\n              ;\n            },\n            title: \"Hapus\",\n            children: /*#__PURE__*/_jsx(Delete, {\n              className: \"cursor-pointer ml-2\",\n              size: \"24px\"\n            })\n          })]\n        })]\n      }, index)), /*#__PURE__*/_jsx(\"div\", {\n        className: \"w-full mt-8 flex flex-row justify-center items-center\",\n        children: /*#__PURE__*/_jsx(Pagination, {\n          activePage: 15,\n          itemsCountPerPage: 10,\n          totalItemsCount: 450,\n          pageRangeDisplayed: 5,\n          onChange: pageNumber => console.log(pageNumber),\n          itemClass: \"bg-blue-100 py-2 px-4 mx-1 rounded font-bold\",\n          linkClass: \"text-gray-700 hover:no-underline hover:text-gray-700\",\n          hideFirstLastPages: true,\n          prevPageText: /*#__PURE__*/_jsx(ChevronLeft, {}),\n          nextPageText: /*#__PURE__*/_jsx(ChevronRight, {}),\n          activeClass: \"bg-blue-400\",\n          activeLinkClass: \"text-white\"\n        })\n      })]\n    }), /*#__PURE__*/_jsxs(Modal, {\n      modalTitle: \"Tambah Instansi\",\n      show: showModal,\n      onClickBackdrop: () => {\n        setShowModal(!showModal);\n        setIsEdit(false);\n      },\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"col-span-6 sm:col-span-3 mb-2\",\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          className: \"font-bold text-black text-sm\",\n          children: \"Induk Instansi\"\n        }), /*#__PURE__*/_jsx(Select, {\n          placeholder: \"Pilih induk instansi\",\n          value: dataInstasi.find(op => op.value === selectedInstansi),\n          onChange: e => setSelectedInstansi(e.value),\n          options: dataInstasi\n        })]\n      }), /*#__PURE__*/_jsxs(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsx(Input, {\n          labelText: \"Kode Instansi\",\n          className: \"my-2\",\n          placeholder: \"Kode Instansi\",\n          type: \"kodeInstansi\",\n          name: \"kodeInstansi\",\n          onChange: formik.handleChange,\n          valueData: formik.values.kodeInstansi\n        }), formik.errors.kodeInstansi && /*#__PURE__*/_jsx(\"span\", {\n          className: \"text-xs text-red-500\",\n          children: formik.errors.kodeInstansi\n        }), /*#__PURE__*/_jsx(TextArea, {\n          labelText: \"Nama Instansi\",\n          className: \"my-2\",\n          placeholder: \"Nama Instansi\",\n          type: \"namaInstansi\",\n          name: \"namaInstansi\",\n          onChange: formik.handleChange,\n          valueData: formik.values.namaInstansi\n        }), formik.errors.namaInstansi && /*#__PURE__*/_jsx(\"span\", {\n          className: \"text-xs text-red-500\",\n          children: formik.errors.namaInstansi\n        }), /*#__PURE__*/_jsx(Button, {\n          onClick: doSave,\n          buttonText: \"Simpan\",\n          buttonColor: \"#4361EE\",\n          buttonTextColor: \"#FFF\",\n          fontSize: 14,\n          className: \"mt-4\",\n          type: \"submit\"\n        })]\n      })]\n    })]\n  });\n}\nconst Wrapper = styled.div`\n  padding: 23px 54px 0px 54px;\n`;\nconst MenuTitle = styled.h1`\n  font-size: 48px;\n  font-weight: bold;\n  color: #000;\n`;\nconst ButtonAdd = styled.div`\n  font-size: 14px;\n  background: #4361ee;\n  color: #fff;\n  padding: 10px 23px;\n  border-radius: 10px;\n  font-weight: 700;\n  cursor: pointer;\n`;\nconst Card = styled.div`\n  background: #fff;\n  border-radius: 10px;\n  box-shadow: 2px 2px 7px rgba(0, 0, 0, 0.25);\n  padding: 30px 46px 30px 46px;\n`;","map":null,"metadata":{},"sourceType":"module"}